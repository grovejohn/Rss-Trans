<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/uk/</link>
    <description></description>
    <lastBuildDate>Sat, 11 May 2024 02:37:47 GMT</lastBuildDate>
    <item>
      <title>KWin 中的 HDR 和色彩管理，第 3 部分</title>
      <link>https://zamundaaa.github.io/wayland/2024/05/11/more-hdr-and-color.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://zamundaaa.github.io/wayland/2024/05/11/more-hdr-and-color.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>使用 QML 语言服务器进行 KDE 开发（更新）</title>
      <link>https://nicolasfella.de/posts/qmlls-for-kde-development-2/?utm_source=atom_feed?utm_source=atom_feed</link>
      <description><![CDATA[在上一篇文章中，我谈到了使用 QML 语言服务器进行 KDE 开发。自从写那篇文章以来，发生了一些事情，所以是时候进行更新了。
我提到过，使用 Kate qmllls 在打开 QML 文件时应该开箱即用。这基本上是正确的，但有一个问题。根据您的发行版，qmlls 的二进制文件具有不同的名称。有时是 qmlls，有时是 qmlls6 或 qmlls-qt6。您可能需要调整 Kate 中的 LSP 服务器设置以匹配您系统上的名称。
为了让 qmlls 找到在应用程序的 C++ 代码中定义的类型，这些类型不仅必须以声明方式注册，还需要告诉 qmlls 在哪里可以找到类型信息。幸运的是 Qt 6.7 附带了一个方便的方法来做到这一点。通过将 -DQT_QML_GENERATE_QMLLS_INI=ON 传递给 CMake，您将生成一个适当的配置文件。这将被放置到项目的源目录中，但特定于您的设置，因此将其添加到您的 gitignore 文件中（PS：您可以为您的系统设置一个全局 gitignore 文件，因此您不需要将其添加到您的所有项目）。不幸的是，最初的实现为某些模块产生了错误配置，但这是已在 Qt 6.7.2 中修复。
我提到的一个问题是 qmlls 找不到未安装到与 Qt 相同路径的模块。 Qt 6.8 将有两个新选项。 -I 参数允许将自定义导入路径添加到 qmlls 中。搜索路径。 -E 参数使 qmlls 考虑其搜索路径的 QML_IMPORT_PATH 环境变量的值。
为了使 qmll 正常工作，需要使用 CMake API 创建模块并使用声明式类型注册。自撰写上一篇文章以来，一些 KDE 模块已转换为这些模块，但仍有更多工作要做。
感谢 QML 团队的快速改进！]]></description>
      <guid>https://nicolasfella.de/posts/qmlls-for-kde-development-2/?utm_source=atom_feed?utm_source=atom_feed</guid>
      <pubDate>Fri, 10 May 2024 10:30:00 GMT</pubDate>
    </item>
    <item>
      <title>网络评论，2024-19 周</title>
      <link>https://ervin.ipsquad.net/blog/2024/05/10/web-review-week-2024-19/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2024/05/10/web-review-week-2024-19/?utm_source=atom_feed</guid>
      <pubDate>Fri, 10 May 2024 09:18:18 GMT</pubDate>
    </item>
    <item>
      <title>KDE 发布框架 6.2.0</title>
      <link>https://kde.org/announcements/frameworks/6/6.2.0/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://kde.org/announcements/frameworks/6/6.2.0/?utm_source=atom_feed</guid>
      <pubDate>Fri, 10 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>剪纸插件 1.2</title>
      <link>https://carlschwan.eu/2024/05/09/kirigami-addons-1.2/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://carlschwan.eu/2024/05/09/kirigami-addons-1.2/?utm_source=atom_feed</guid>
      <pubDate>Thu, 09 May 2024 20:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Ubuntu Noble 上的 KDE neon 变基</title>
      <link>https://blog.neon.kde.org/2024/05/09/kde-neon-rebasing-on-ubuntu-noble/?utm_source=atom_feed</link>
      <description><![CDATA[新的 Ubuntu LTS 于 4 月发布，祝贺所有参与其中的人。我知道 Scarlett 努力让 Kubuntu 恢复正常，所以如果您想要稳定的 Plasma 5 桌面，请尝试一下。
在 KDE neon 项目中，我们不喜欢久坐不动，因此我们现在在版本 24.04 的 Ubuntu Noble 上构建所有 KDE 软件包。这总是比想象中需要更长的时间，主要是因为随着更多 KDE 软件的发布，保持所有内容都编译是一个不断变化的目标，因此无法承诺何时准备就绪，但我们会尝试速度要快，因为 jammy (22.04) 的旧 Ubuntu 基础已经显示出它的年龄，像 Krita 这样的项目不再能够在那里编译。
到目前为止，主要问题是 64 位 time_t 解决 y2k38 问题所需的所有更改，我们知道您不希望时钟在 2038 年归零。]]></description>
      <guid>https://blog.neon.kde.org/2024/05/09/kde-neon-rebasing-on-ubuntu-noble/?utm_source=atom_feed</guid>
      <pubDate>Thu, 09 May 2024 12:04:18 GMT</pubDate>
    </item>
    <item>
      <title>KDE 2024 年赛季结束</title>
      <link>https://mentorship.kde.org/blog/2024-05-09-sok-conclusion/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://mentorship.kde.org/blog/2024-05-09-sok-conclusion/?utm_source=atom_feed</guid>
      <pubDate>Thu, 09 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Archlinux 中 KDE 应用程序和 Plasma 的现状</title>
      <link>https://tcanabrava.github.io/state-kde-arch/?utm_source=atom_feed</link>
      <description><![CDATA[KDE 与许多 Linux 发行版有着共生关系，因为在我们开发软件的同时，我们也使用特定版本的 Linux，我个人多年来一直使用 archlinux 作为我选择的发行版，这是我能够获得更多支持的唯一发行版超过六个月（我相信我已经使用它超过 15 年了，所以这很重要）。
“食谱”为 arch 打包 KDE 软件规模很大，因为我们很大，打包大量软件并不是一件容易的事，所以我和 Antonio Rojas 开始更新构建脚本，以减少手动操作并减少出错的可能性。已打包用于 arch 的所有 Plasma 6 版本都以一种或另一种方式使用此脚本（或者当我们破坏所有内容时手动使用:)
这项工作正在一个单独的分支中完成，以免破坏当前的工作流程，但事情看起来不错，我们希望尽快将其合并到 master 中，以便为 arch 部署较新版本的 KDE 软件将是一个命令，这意味着开发人员可以有更多的时间来减少创建包的时间。]]></description>
      <guid>https://tcanabrava.github.io/state-kde-arch/?utm_source=atom_feed</guid>
      <pubDate>Thu, 09 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>KDE e.V.正在为环境可持续发展项目寻找网页设计师（Hugo）</title>
      <link>https://ev.kde.org/2024/05/08/2024-05-08-job-kde-eco-website/?utm_source=atom_feed</link>
      <description><![CDATA[KDE e.V. 是支持 KDE 社区的非营利组织，正在寻找一位精通 Hugo 为 KDE Eco 网站实施新的环境可持续发展活动。请参阅招聘广告，了解有关此就业机会的更多详细信息。 
我们期待您的申请。]]></description>
      <guid>https://ev.kde.org/2024/05/08/2024-05-08-job-kde-eco-website/?utm_source=atom_feed</guid>
      <pubDate>Wed, 08 May 2024 17:30:00 GMT</pubDate>
    </item>
    <item>
      <title>KGraphViewer 2.5.0 发布</title>
      <link>https://blogs.kde.org/2024/05/08/kgraphviewer-2.5.0-released/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2024/05/08/kgraphviewer-2.5.0-released/?utm_source=atom_feed</guid>
      <pubDate>Wed, 08 May 2024 00:00:00 GMT</pubDate>
    </item>
    </channel>
</rss>