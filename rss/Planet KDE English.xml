<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/uk/</link>
    <description></description>
    <lastBuildDate>Wed, 12 Jun 2024 02:45:23 GMT</lastBuildDate>
    <item>
      <title>我的 GSoC 中的最后两周</title>
      <link>https://alcarazzam.dev/posts/the-last-2-weeks-in-gsoc/?utm_source=atom_feed</link>
      <description><![CDATA[我们已经进入了 Google Summer of Code 编码阶段的第三周！提醒一下，我正在为一些 KDE 框架添加 Python 支持。在前两周，我添加了对 KWidgetsAddons 的支持，现在几乎完成了，除了两个小部件，它们的绑定没有正确生成并且无法编译。
我还编写了（在我的导师 Carl 的帮助下）构建库所需的 CMake 代码。这部分可能（希望）会在 extra-cmake-modules 中结束，以便任何人都可以轻松使用它。计划最终将每个绑定提交到他们的存储库，以便更容易使 C++ 库与它们的 Python 绑定保持同步。
本周我将为 KWidgetAddons 添加一些示例，因为它现在处于可用状态。如果您想了解进展如何，可以查看代码。]]></description>
      <guid>https://alcarazzam.dev/posts/the-last-2-weeks-in-gsoc/?utm_source=atom_feed</guid>
      <pubDate>Tue, 11 Jun 2024 15:30:00 GMT</pubDate>
    </item>
    <item>
      <title>macOS 15 Sequoia 上的 Qt</title>
      <link>https://www.qt.io/blog/qt-on-macos-15-sequoia?utm_source=atom_feed</link>
      <description><![CDATA[
  

按照惯例，苹果昨天在 WWDC 上发布了最新的操作系统版本，包括 macOS 15 Sequoia，以内华达山脉国家公园命名。
]]></description>
      <guid>https://www.qt.io/blog/qt-on-macos-15-sequoia?utm_source=atom_feed</guid>
      <pubDate>Tue, 11 Jun 2024 13:19:06 GMT</pubDate>
    </item>
    <item>
      <title>Plasma 浏览器集成 1.9.1</title>
      <link>https://blog.broulik.de/2024/06/plasma-browser-integration-1-9-1/?utm_source=atom_feed</link>
      <description><![CDATA[我很高兴地宣布，Plasma Browser Integration 1.9.1 版现已在 Firefox Web Store 上发布。这是 Firefox 版本的 1.9 版，早在 2023 年 11 月就发布了。我们不确定它是如何卡在附加组件审核中的，我们也没有意识到这一点，但无论原因是什么，它现在都发布了！这是一个维护版本，其中包含一些重要更改以及常规的翻译更新。当然，Plasma 6 完全支持该扩展！
Konqi 正在浏览万维网
Plasma 浏览器集成弥合了浏览器与 Plasma 桌面 之间的差距。它允许您共享链接、在 KRunner 中查找浏览器选项卡和访问过的网站、在通知中心监控下载进度，以及随时在 Plasma 中控制音乐和视频播放，甚至可以使用 KDE Con​​nect 从手机控制音乐和视频播放！

下一个版本可能是移植到 Manifest v3 的 2.0 版本，因为 Chrome 将继续推出强制执行新清单版本。我们仍在尝试寻找一种方法来保持统一的代码库以支持 Firefox 和 Chrome。例如，Chrome 现在需要服务工作者来扩展，而 Firefox 继续仅支持后台页面。不过，最近的 Firefox 和 Chrome 版本似乎支持彼此的清单属性，因此我们有信心在不引入特定于浏览器的 git 分支的情况下完成这项工作。
有什么新东西？
如果您是 Firefox 用户，请查看上一版本公告，了解有关新功能的更多详细信息：

重新编写页面注入代码（例如修复 Spotify）
远离已弃用的 InstallTrigger
“共享...”菜单现在也在选项卡上下文菜单中
选项卡运行器仅查询“普通”窗口（无应用程序）
历史记录运行器跳过“blob” URL
在向本机消息主机发送消息之前对其进行检查（修复不受支持的平台（例如 Windows）上令人讨厌的控制台警告）
更漂亮的控制台调试输出
性能和资源使用改进

（另请参阅我们社区 Wiki 上的变更日志页面）]]></description>
      <guid>https://blog.broulik.de/2024/06/plasma-browser-integration-1-9-1/?utm_source=atom_feed</guid>
      <pubDate>Tue, 11 Jun 2024 10:35:20 GMT</pubDate>
    </item>
    <item>
      <title>切换到 GNU/Linux：精神上</title>
      <link>https://nathanupchurch.com/blog/switching-to-gnu-linux-mentally/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://nathanupchurch.com/blog/switching-to-gnu-linux-mentally/?utm_source=atom_feed</guid>
      <pubDate>Tue, 11 Jun 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>需要帮助！将 KDE 框架 oss-fuzz 版本移植到 Qt6/KF6</title>
      <link>https://tsdgeos.blogspot.com/2024/06/help-wanted-port-kde-frameworks-oss.html?utm_source=atom_feed</link>
      <description><![CDATA[如果您正在寻找一种独立且直接的方式来开始为 KDE 做出贡献，那么您来对地方了。在 KDE，我们通过 oss-fuzz 使用模糊测试来尝试确保我们的库能够抵御损坏的输入。以下是您可以如何帮助我们完成这项重要任务。什么是模糊测试？模糊测试涉及将“随机” [1] 数据输入到我们的代码中，以检查其对无效或意外输入的鲁棒性。这对于确保在没有直接用户控制的情况下处理数据的应用程序的安全性和稳定性至关重要。为什么模糊测试很重要？想象一下通过电子邮件收到一张图片，将其保存到您的磁盘并在 Dolphin 中打开它。这将使 Dolphin 创建该图片的缩略图。如果图片已损坏并且我们的图片插件代码不可靠，那么最好的情况就是 Dolphin 崩溃。在最坏的情况下，它可能会导致安全漏洞。因此，模糊测试有助于防止此类漏洞。您可以如何提供帮助：我们需要更新 oss-fuzz 中的 KDE 库版本以使用 Qt6。此任务可能具有挑战性，因为它涉及静态编译并确保为所有编译单元传递了正确的标志。贡献步骤：从 karchive 项目开始下载oss-fuzz并进入karchive 子文件夹。更新 Dockerfile 以从 dev 分支下载 Qt 并从 master 分支下载 KDE 框架。更新 build.sh 脚本：修改 build.sh 脚本以编译 Qt6（这将更难，因为它涉及移动在 karchive_fuzzer.cc 的顶部，您会发现一条注释，其中包含 oss-fuzz 运行的三个命令。使用这些命令来测试映像构建、模糊测试器构建和运行过程。需要帮忙？如果您有疑问或需要帮助，请通过 aacid@kde.org 与我联系，或在 Matrix 上通过 @tsdgeos:kde.org 与我联系注意：[1] 智能模糊测试引擎不会生成纯随机数据。他们使用半随机和半智能技术来有效地查找代码中的问题。]]></description>
      <guid>https://tsdgeos.blogspot.com/2024/06/help-wanted-port-kde-frameworks-oss.html?utm_source=atom_feed</guid>
      <pubDate>Mon, 10 Jun 2024 23:01:00 GMT</pubDate>
    </item>
    <item>
      <title>第 2 周回顾 - Aseprite 的像素完美</title>
      <link>https://kenlo.hashnode.dev/week-2-recap-aseprites-pixel-perfect?utm_source=atom_feed</link>
      <description><![CDATA[大家好，这是第二周，也是我计划进行研究的最后一周。这周我仔细研究了 Krita 的代码库和像素完美算法。重点关注了如何实现像素完美的示例（特别是在 Aseprite 中）。...]]></description>
      <guid>https://kenlo.hashnode.dev/week-2-recap-aseprites-pixel-perfect?utm_source=atom_feed</guid>
      <pubDate>Mon, 10 Jun 2024 03:59:27 GMT</pubDate>
    </item>
    <item>
      <title>新的人机界面指南</title>
      <link>https://pointieststick.com/2024/06/09/new-human-interface-guidelines/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://pointieststick.com/2024/06/09/new-human-interface-guidelines/?utm_source=atom_feed</guid>
      <pubDate>Sun, 09 Jun 2024 22:38:07 GMT</pubDate>
    </item>
    <item>
      <title>KDE Stopmotion 0.8.7 发布</title>
      <link>https://gruenich.blogspot.com/2024/06/release-of-kde-stopmotion-087.html?utm_source=atom_feed</link>
      <description><![CDATA[今天 KDE Stopmotion 0.8.7 正式发布！关于 StopmotionStopmotion
是一款用于创建定格动画的免费开源应用程序。它
可帮助您捕获和编辑动画帧并将其
导出为单个文件。可从网络摄像头、MiniDV 摄像机和 DSLR 摄像机直接
捕获。它提供
洋葱皮、从磁盘导入图像和延时摄影功能。
Stopmotion 支持多个场景、帧编辑、基本音轨、
以不同帧速率播放动画以及用于
图像的 GIMP 集成。可以将影片导出到文件和 Cinelerra 帧列表。从技术上讲，它是一个 C++ / Qt 应用程序，具有对相机捕获库的可选依赖项。0.8.7 版中的更改此版本没有新功能，但对项目本身进行了改进。更改该项目现在正式命名为 KDE Stopmotion。不再使用以前的名称 Linux Stopmotion。已删除对 qmake 的支持。改用 CMake。功能将序列化移植到 libarchive。放弃了 libtar。（感谢 Bastian Germann）错误修复.sto 文件缺少 tar 尾部。 （#16，感谢 Bastian Germann 提供修复）改进使用 pkg-config 查找依赖项 vorbisfile 和 xml2（感谢 Barak Pearlmutter）删除依赖于 Qt 5 中弃用的代码；这是为迁移到 Qt 6 所做的准备。未来计划从 Qt 5 过渡到版本 6。我被困在了  QAudioDeviceInfo  的移植中，该移植已在 Qt 6 中被删除。我需要一些帮助，以便将 Stopmotion 移植到使用 Qt 6 / Qt Mulimedia 处理音频的新方式。我们应该更好地集成到 KDE 的技术堆栈中：国际化，使用 KDE 库，更新和重新格式化文档。参与进来！如果您有兴趣，请尝试 Stopmotion。联系我们的邮件列表 stopmotion@kde.org 或查看 我们的项目。分享您的想法或参与进来！
]]></description>
      <guid>https://gruenich.blogspot.com/2024/06/release-of-kde-stopmotion-087.html?utm_source=atom_feed</guid>
      <pubDate>Sun, 09 Jun 2024 21:35:00 GMT</pubDate>
    </item>
    <item>
      <title>Firefox 配置文件和 Plasma 启动器（X11 /编辑：和 Wayland/）</title>
      <link>https://cukic.co/2024/06/08/firefox-profiles/index.html?utm_source=atom_feed</link>
      <description><![CDATA[我是 Firefox 配置文件的重度用户。除了为不同的活动使用不同的配置文件外，我还有几个额外的配置文件，它们都在 Default 活动中运行。
这意味着我需要在 Plasma 的面板中显示不同的图标，以便能够轻松区分窗口属于哪个配置文件。
当然，我使用显示窗口标题的任务小程序，而不是仅显示图标的标题（我更喜欢可用性而不是极简主义），但这还不够，因为有时 Firefox 窗口中的活动选项卡可能没有最具信息量的标题。
当选择将在面板中显示的图标时，Plasma 似乎依赖于应用程序名称和窗口类。这意味着，默认情况下，所有 Firefox 实例最终都会具有相同的图标。


Librewolf with a custom profile icon

幸运的是，Firefox 允许您通过命令行参数指定它应该使用的窗口类。
firefox -P ProfileName --class WindowClassName
并且，要将启动器连接到特定的窗口类，您只需将以下行添加到 .desktop文件：
StartupWMClass=WindowClassName
因此，为了获得良好支持的 Firefox 配置文件，您可以
创建一个具有类似以下内容的桌面文件的启动器：
[桌面条目]
Exec=firefox -P SocialSites --class FirefoxSocialSites
Icon=user-available-symbolic
StartupWMClass=FirefoxSocialSites
它还适用于 Firefox 衍生产品，例如 Librewolf（可以在上面的屏幕截图中看到）和其他产品。
Wayland
对于 Wayland 用户，John Kizer 的评论可能会有用：

在 Wayland 上，我最终只使用 KWin 窗口规则（基于窗口标题的子字符串，并设置桌面文件名）与启动 Firefox 的 .desktop 文件结合使用有问题的网站
并关联所需的图标。

]]></description>
      <guid>https://cukic.co/2024/06/08/firefox-profiles/index.html?utm_source=atom_feed</guid>
      <pubDate>Sun, 09 Jun 2024 17:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Selenium 入门 - 第 1 部分：Selenium 简介</title>
      <link>https://tube.kockatoo.org/w/nLh4pn9P3dfqGeAYs4NXkW?utm_source=atom_feed</link>
      <description><![CDATA[在此视频中，我介绍了用于测试 KDE 应用程序的 Selenium AT-SPI。我介绍了 KDE 的可持续软件、可访问性和系统测试自动化目标，以及 Selenium 如何帮助实现所有这些目标。
Selenium AT-SPI 是一款出色的软件，由 KDE 开发人员 Harald Sitter 编写。它是 KDE 中用于自动测试 GUI 应用程序的工具。这使开发人员能够设计所有人都可以访问的应用程序并提高其能源效率。作为 KDE 2024 季的一部分，我决定为 KDE 开发人员制作一个视频教程。
如果您觉得此视频有用，您可以通过 Gitter 与我联系。我很乐意收到您的回复 😃
该视频由 Pradyot Ranjan (@pradyotranjan:gitter.im) 制作。

第 2 部分：设置 Selenium
第 3 部分：识别可访问性问题
第 4 部分：编写 Selenium 测试
]]></description>
      <guid>https://tube.kockatoo.org/w/nLh4pn9P3dfqGeAYs4NXkW?utm_source=atom_feed</guid>
      <pubDate>Sat, 08 Jun 2024 19:31:40 GMT</pubDate>
    </item>
    </channel>
</rss>