<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/de/</link>
    <description></description>
    <lastBuildDate>Sun, 05 Jan 2025 16:40:41 GMT</lastBuildDate>
    <item>
      <title>本周 KDE 应用：移动上下文菜单</title>
      <link>https://blogs.kde.org/2025/01/05/this-week-in-kde-apps-mobile-context-menus/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2025/01/05/this-week-in-kde-apps-mobile-context-menus/?utm_source=atom_feed</guid>
      <pubDate>Sun, 05 Jan 2025 12:50:35 GMT</pubDate>
    </item>
    <item>
      <title>我在 KDE/Plasma Mobile 的最后六个月</title>
      <link>https://lprod.dev/blog/monthly_2025_01.html?utm_source=atom_feed</link>
      <description><![CDATA[全方位的学习体验

呃。真的已经快半年了吗？哎呀。
不幸的是，即使有这么多个月，我也没有像我希望的那样在 KDE 领域完成很多工作，主要有两个原因：

我一直在相当大的任务之间来回徘徊（就我目前在 KDE 堆栈中的经验水平而言），导致花费了大量时间却收效甚微。我学到了很多东西，但目前还没有太多可以展示的东西。在葡萄牙举行的 2024 年欧洲火箭挑战赛 (EuRoC) 的准备工作花费了大量时间 - 这是我第二次与维也纳技术大学太空团队一起参加比赛，虽然这绝对是一件令人兴奋的事情，但准备学生建造的双液体推进火箭进行发射却更耗时。谁能想到呢！也许我将来会为此专门写一篇文章，我们拭目以待。


回到 KDE：这不仅仅是学习——我的手机也坏了！嗯。有点。可能是 SIM 卡读取器接触不良导致它比我希望的更频繁地断开与 SIM 卡的连接。
然而，这确实促使我将 SIM 卡放入我的旧 OnePlus 6T，而这款手机恰好运行 postmarketOS edge，使我成为官方的 Linux Mobile 日常驱动程序。
我很高兴地报告它大部分都正常工作。当然，有一些我想要的应用程序在 Linux Mobile 上不可用（还没有？），但那里的东西可以工作，对我来说已经足够了。
虽然肯定有许多非常烦人的错误需要解决——所以我会解决它们。目前，我的 SIM 卡已装回我那款不稳定的 Android 手机中，直到我修复了一个错误，该错误有时会重复来电，导致它们在你已经接听时继续响铃（不太理想），但之后我想我会继续使用 6T 和 Plasma Mobile 一段时间。
现在，在我写另一部小说之前，让我们先来看看我在过去几个月里真正完成的东西。
合并的更改

移动任务切换器


修复了从主屏幕打开任务切换器的动画问题修复了任务清理模式下图标列表有时偏离中心的问题重新引入了在非停靠模式下最大化选定窗口的功能。从技术上讲，这应该不是必要的，因为我们的 KWin 配置应该已经强制窗口全屏了，但有些应用程序设法打破了这种局面（主要是基于 GTK 的应用程序），所以又回到了原点。在移动环境中禁用触摸手势的蓝色边框 - 作为基于鼠标手势的指示器，它很不错，但在这里没有必要。在导航栏任务切换按钮上添加双击，以在最近的 2 个应用程序之间切换。


杂项


在移动设备上禁用会话恢复（至少在拨号器在登录屏幕上启动软锁定手机的错误被修复之前）这不是我做的改变，但我想提一下，因为它很棒，我在上一篇文章中提到我之前尝试过（但失败了）处理这个问题：Micah Stanley 在新的移动友好性方面做得非常出色通知！我还完成了我的第一个 MR 评审，这很令人兴奋，而且比我预期的工作量要多得多。此时，我想感谢所有花时间在我的 MR 上的人！


未完成

由于中间出现的所有问题，我仍然无法回到 KWin 的触摸角落手势 MR，例如：

修复导航栏启用时导航手势仍然有效。不幸的是，这需要改变我们的设置系统的工作方式，并且... CMake 在这里让我崩溃了。我几乎要解决这个问题了，但为了我自己的理智，我不得不暂时把它放在一边。我希望很快能回到这个问题上，因为这很烦人。改善等离子拨号器的锁屏行为。目前，通过会话恢复，它会在移动设备的初始登录屏幕上方恢复，如果手机在关机时恰好正在运行，则基本上会软锁定手机。在锁屏期间接到电话时也会发生类似的事情 - 我目前正在想办法最好地解决这个问题。


好了，现在我要说的就这么多。希望我能更及时地完成下一篇文章，但让我们看看我目前的大件物品会让我忙多久]]></description>
      <guid>https://lprod.dev/blog/monthly_2025_01.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 04 Jan 2025 21:00:00 GMT</pubDate>
    </item>
    <item>
      <title>KDE：Snap 修补程序和更新</title>
      <link>https://www.scarlettgatelymoore.dev/kde-snap-hotfixes-and-updates/?utm_source=atom_feed</link>
      <description><![CDATA[修复了 okular pdf 打印 https://bugs.kde.org/show_bug.cgi?id=498065
修复了 kwave 录音 https://bugs.kde.org/show_bug.cgi?id=442085 请运行 sudo snap connect kwave:audio-record :audio-record 直到自动连接在此处获得批准：https://forum.snapcraft.io/t/kde-auto-connect-our-two-recording-apps/44419
–edge 中的新 qt6 snap 直到 24.12.1 版本


minuet
ksystemlog
kwordquiz
lokalize
ksirk
ksnakeduel
kturtle

我已经开始转向 core24，目前在 –edge 中，直到 24.12.1 版本。
core24 带来了一些重大改进！

将 kf6-core24 从 11G 减少到 2G 左右
新的 gpu-2404 可改善图形支持 https://discourse.ubuntu.com/t/the-gpu-2404-snap-interface/44251
更新依赖项以实现更多功能


Tokodon 是我们出色的 Mastadon 客户
我不想问这个问题，但我因为手臂骨折而失业了，每天要花 6 个小时去医院治疗。如果您能提供任何帮助，我将不胜感激！ https://gofund.me/573cc38e]]></description>
      <guid>https://www.scarlettgatelymoore.dev/kde-snap-hotfixes-and-updates/?utm_source=atom_feed</guid>
      <pubDate>Sat, 04 Jan 2025 13:36:17 GMT</pubDate>
    </item>
    <item>
      <title>38C3 印象</title>
      <link>https://www.volkerkrause.eu/2025/01/04/kde-38c3-impressions.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://www.volkerkrause.eu/2025/01/04/kde-38c3-impressions.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 04 Jan 2025 12:00:00 GMT</pubDate>
    </item>
    <item>
      <title>本周等离子：艺术性和可访问性</title>
      <link>https://blogs.kde.org/2025/01/04/this-week-in-plasma-artistry-and-accessibility/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2025/01/04/this-week-in-plasma-artistry-and-accessibility/?utm_source=atom_feed</guid>
      <pubDate>Sat, 04 Jan 2025 04:00:00 GMT</pubDate>
    </item>
    <item>
      <title>网络评论，第 2025-01 周</title>
      <link>https://ervin.ipsquad.net/blog/2025/01/03/web-review-week-2025-01/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2025/01/03/web-review-week-2025-01/?utm_source=atom_feed</guid>
      <pubDate>Fri, 03 Jan 2025 10:15:33 GMT</pubDate>
    </item>
    <item>
      <title>为 KDE 添加家庭自动化</title>
      <link>http://blog.davidedmundson.co.uk/blog/adding-home-automation-to-kde/?utm_source=atom_feed</link>
      <description><![CDATA[
关于
顾名思义，家庭自动化主要是关于自动化的。
您每天工作时面对的机器包含大量有用信息，这些信息对您的家庭管理大有裨益。
我有一个脚本，如果我在下午打开摄像头，它会放下百叶窗，否则会产生恼人的眩光。我的办公室灯和显示器在晚上都会呈现红色，但禁用 PC 上的夜间模式也会自动禁用执行红移的主灯。我希望我的屏幕不是在活动后 10 分钟关闭，这既令人烦恼又太短，而是在我房间里的运动传感器显示我已离开的那一刻关闭。
Home Assistant 是最好的开源家庭自动化工具，它支持所有这些，但它需要一些挂钩，以便 PC 告知它当前状态并调用 PC 上的操作。
现有的解决方案都不能很好地满足我的要求。几年前，我写了一个供个人使用的东西，对我来说效果很好，我在后台运行它，并没有打算进一步使用它。
在 KDE 目标冲刺期间，另一位用户建议创建一些非常类似的东西（https://phabricator.kde.org/T17435）。这个目标可能不是我选择的，但它确实激励我整理和记录我所拥有的东西，并将其变成一个更充实的项目。
应用程序
我制作了一个小型守护进程，名为 Kiot（源自“KDE 物联网”），它将这些信息公开给您的家庭自动化软件。
这是预 alpha 软件，没有 GUI 配置，它依赖于手动设置配置文件来指向您的家庭自动化服务器。如果有足够的吸引力，我可能会让它更易于打包，并在圣诞节假期创建一个 UI 配置。
已经交付了一堆传感器和操作，但它包含一个仿插件系统，使扩展变得容易，以及用户提供的脚本的钩子。

用户活动
锁定状态
暂停/电源操作
相机正在使用
强调色
任意脚本
快捷方式
夜间模式抑制

从 Home Assistant 使用它尽可能简单。


查看
可以在 https://github.com/davidedmundson/kiot 找到存储库，其中包含设置说明如果您想制作任何其他插件，请参阅开发人员文档（https://github.com/davidedmundson/kiot/blob/master/DEVELOPMENT.md）。]]></description>
      <guid>http://blog.davidedmundson.co.uk/blog/adding-home-automation-to-kde/?utm_source=atom_feed</guid>
      <pubDate>Fri, 03 Jan 2025 09:08:52 GMT</pubDate>
    </item>
    <item>
      <title>重新制作并移植我的 KRunner 插件</title>
      <link>https://alex1701c.github.io/2025/01/03/krunner-plugins.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://alex1701c.github.io/2025/01/03/krunner-plugins.html?utm_source=atom_feed</guid>
      <pubDate>Fri, 03 Jan 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>我测量了 KDE 的提交统计数据，结果令我感到惊讶！</title>
      <link>http://blog.davidedmundson.co.uk/blog/i-measured-kdes-commit-stats-and-the-results-surprised-me/?utm_source=atom_feed</link>
      <description><![CDATA[尽管提交数量并不是衡量任何事物的完美标准，但它们仍然可以很好地表明一个项目是健康的还是摇摇欲坠的。密切关注它们很有用，年初是这样做的好时机。
我喜欢图表，每个人都喜欢图表，它们不需要进一步介绍。
框架



等离子



KWin



结论
我分享的主要原因是，在我收集一些数据之前，我对社区健康状况有一种负面感觉，但没有任何数据支持这种感觉，而且这种感觉毫无根据，当你忙于生活时，很难了解这一年的情况。
去年 KF6/Plasma 6.0 带来了一点好处，今年确实出现了相对下降，但这只是回到了以前的平均水平，没有什么可担心的。最重要的图表是我们每年获得了多少新作者和贡献者。总贡献者和新贡献者的数量相对一致。
事情没有改变，而且很无聊，这不适合写成好的帖子标题（因此需要 Youtube 级别的修饰），但对于如此大的项目来说，这是一个很好的标题。
第三张图表衡量了提交量占提交总量的多少。如果这个数字是 1，则意味着只有一名开发人员在运行该项目，如果他们离开，那将是一个不健康的环境。如果这个数字太高，则意味着没有核心团队在维护它。没有“正确”的数字，但我觉得这是一个非常有趣的指标，尤其是看到 Kwin 中发生的事情。
关于统计数据
图表是从 Curl 仪表板使用的相同脚本生成的（https://curl.se/dashboard.html）。它没有 Curl 拥有的所有统计数据，因为每个都需要一些手动操作才能使其更通用。
框架和 Plasma 统计数据是通过本地 git filter 将所有存储库分支到大型存储库并以此为基础制作的。]]></description>
      <guid>http://blog.davidedmundson.co.uk/blog/i-measured-kdes-commit-stats-and-the-results-surprised-me/?utm_source=atom_feed</guid>
      <pubDate>Thu, 02 Jan 2025 09:00:49 GMT</pubDate>
    </item>
    <item>
      <title>kdesrc-build 与第三方应用程序</title>
      <link>https://cukic.co/2025/01/01/kdesrc-build-custom?utm_source=atom_feed</link>
      <description><![CDATA[我使用几个非 KDE Qt 应用程序，我倾向于从源代码手动编译这些应用程序，以使用与我编译 KDE 软件时所针对的非发行版提供的 Qt 版本相同的版本。
我注意到，我更新它们的频率不如系统其他部分那么高，所以我决定看看是否可以将它们添加到
kdesrc-build。
要构建的软件包定义位于
repo-metadata/module-definictions，其中已经包含 KDE 框架和应用程序使用的几个第三方库。
将 Strawberry 播放器（Clementine 的分支，Clementine 是 Amarok 1.x 的分支）添加到构建中非常简单。我只需要
定义存储库、cmake 选项以使其构建
Qt6 版本而不是 Qt5 版本，以及我想要从中构建的分支。
module strawberry
存储库 https://github.com/strawberrymusicplayer/strawberry.git
cmake-options -DBUILD_WITH_QT6=ON
分支 master
end module
对于具有正常 cmake 设置的应用程序，就是这么简单。但有些应用程序（如 recoll）在顶层没有 CMakeLists.txt 文件，而
kdesrc-build 不喜欢这样。
为了确保 kdesrc-build 找到 cmake 的真实 src 目录，我需要做一些完全黑客的事情。我
必须将源目录的路径传递给 cmake-options，否则该路径将由 kdesrc-build 自动为其构建的每个项目定义：
module recoll
存储库 https://framagit.org/medoc92/recoll.git
cmake-options \
-DRECOLL_QT6_BUILD=1 \
-DRECOLL_ENABLE_SYSTEMD=0 \
-DRECOLL_ENABLE_WEBENGINE=1 \
-DRECOLL_ENABLE_X11MON=0 \
-S /kde/src/recoll/src
分支 master
结束模块
幸运的是，kdesrc-build 附加了
cmake-options 正常的 cmake 参数，因此
我的 -S 路径覆盖了路径kdesrc-build 定义。
]]></description>
      <guid>https://cukic.co/2025/01/01/kdesrc-build-custom?utm_source=atom_feed</guid>
      <pubDate>Wed, 01 Jan 2025 10:50:33 GMT</pubDate>
    </item>
    </channel>
</rss>