<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/de/</link>
    <description></description>
    <lastBuildDate>Thu, 02 Jan 2025 16:19:03 GMT</lastBuildDate>
    <item>
      <title>我测量了 KDE 的提交统计数据，结果令我感到惊讶！</title>
      <link>http://blog.davidedmundson.co.uk/blog/i-measured-kdes-commit-stats-and-the-results-surprised-me/?utm_source=atom_feed</link>
      <description><![CDATA[尽管提交数量并不是衡量任何事物的完美标准，但它们仍然可以很好地表明一个项目是健康的还是摇摇欲坠的。密切关注它们很有用，年初是这样做的好时机。
我喜欢图表，每个人都喜欢图表，它们不需要进一步介绍。
框架



等离子



KWin



结论
我分享的主要原因是，在我收集一些数据之前，我对社区健康状况有一种负面感觉，但没有任何数据支持这种感觉，而且这种感觉毫无根据，当你忙于生活时，很难了解这一年的情况。
去年 KF6/Plasma 6.0 带来了一点好处，今年确实出现了相对下降，但这只是回到了以前的平均水平，没有什么可担心的。最重要的图表是我们每年获得了多少新作者和贡献者。总贡献者和新贡献者的数量相对一致。
事情没有改变，而且很无聊，这不适合写成好的帖子标题（因此需要 Youtube 级别的修饰），但对于如此大的项目来说，这是一个很好的标题。
第三张图表衡量了提交量占提交总量的多少。如果这个数字是 1，则意味着只有一名开发人员在运行该项目，如果他们离开，那将是一个不健康的环境。如果这个数字太高，则意味着没有核心团队在维护它。没有“正确”的数字，但我觉得这是一个非常有趣的指标，尤其是看到 Kwin 中发生的事情。
关于统计数据
图表是从 Curl 仪表板使用的相同脚本生成的（https://curl.se/dashboard.html）。它没有 Curl 拥有的所有统计数据，因为每个都需要一些手动操作才能使其更通用。
框架和 Plasma 统计数据是通过本地 git filter 将所有存储库分支到大型存储库并以此为基础制作的。]]></description>
      <guid>http://blog.davidedmundson.co.uk/blog/i-measured-kdes-commit-stats-and-the-results-surprised-me/?utm_source=atom_feed</guid>
      <pubDate>Thu, 02 Jan 2025 09:00:49 GMT</pubDate>
    </item>
    <item>
      <title>kdesrc-build 与第三方应用程序</title>
      <link>https://cukic.co/2025/01/01/kdesrc-build-custom?utm_source=atom_feed</link>
      <description><![CDATA[我使用几个非 KDE Qt 应用程序，我倾向于从源代码手动编译这些应用程序，以使用与我编译 KDE 软件时所针对的非发行版提供的 Qt 版本相同的版本。
我注意到，我更新它们的频率不如系统其他部分那么高，所以我决定看看是否可以将它们添加到
kdesrc-build。
要构建的软件包定义位于
repo-metadata/module-definictions，其中已经包含 KDE 框架和应用程序使用的几个第三方库。
将 Strawberry 播放器（Clementine 的分支，Clementine 是 Amarok 1.x 的分支）添加到构建中非常简单。我只需要
定义存储库、cmake 选项以使其构建
Qt6 版本而不是 Qt5 版本，以及我想要从中构建的分支。
module strawberry
存储库 https://github.com/strawberrymusicplayer/strawberry.git
cmake-options -DBUILD_WITH_QT6=ON
分支 master
end module
对于具有正常 cmake 设置的应用程序，就是这么简单。但有些应用程序（如 recoll）在顶层没有 CMakeLists.txt 文件，而
kdesrc-build 不喜欢这样。
为了确保 kdesrc-build 找到 cmake 的真实 src 目录，我需要做一些完全黑客的事情。我
必须将源目录的路径传递给 cmake-options，否则该路径将由 kdesrc-build 自动为其构建的每个项目定义：
module recoll
存储库 https://framagit.org/medoc92/recoll.git
cmake-options \
-DRECOLL_QT6_BUILD=1 \
-DRECOLL_ENABLE_SYSTEMD=0 \
-DRECOLL_ENABLE_WEBENGINE=1 \
-DRECOLL_ENABLE_X11MON=0 \
-S /kde/src/recoll/src
分支 master
结束模块
幸运的是，kdesrc-build 附加了
cmake-options 正常的 cmake 参数，因此
我的 -S 路径覆盖了路径kdesrc-build 定义。
]]></description>
      <guid>https://cukic.co/2025/01/01/kdesrc-build-custom?utm_source=atom_feed</guid>
      <pubDate>Wed, 01 Jan 2025 10:50:33 GMT</pubDate>
    </item>
    <item>
      <title>KDE：应用程序快照 24.12.0 版本及更多内容</title>
      <link>https://www.scarlettgatelymoore.dev/kde-application-snaps-24-12-0-release-and-more/?utm_source=atom_feed</link>
      <description><![CDATA[

https://kde.org/announcements/gear/24.12.0
希望大家节日愉快！我送给您的礼物是闪亮的新应用程序快照！此版本中有几个新的 qt6 端口。请访问 https://snapcraft.io/store?q=kde
我还修复了 Krita snap 无法打开/保存的 bug。请测试 –edge！
我正在继续致力于 core24 支持，希望在下一个版本之前完成。
我真的很期待 2025 年！2024 年滚开！
如果你能帮我解决气体问题，我还有 3 周的治疗时间。感谢您一直以来的支持。
https://gofund.me/573cc38e]]></description>
      <guid>https://www.scarlettgatelymoore.dev/kde-application-snaps-24-12-0-release-and-more/?utm_source=atom_feed</guid>
      <pubDate>Tue, 31 Dec 2024 14:34:48 GMT</pubDate>
    </item>
    <item>
      <title>KDE Plasma 6.2.5，12 月错误修复版本</title>
      <link>https://kde.org/announcements/plasma/6/6.2.5/?utm_source=atom_feed</link>
      <description><![CDATA[2024 年 12 月 31 日，星期二。今天，KDE 发布了 KDE Plasma 6 的错误修复更新，版本号为 6.2.5。
Plasma 6.2 于 2024 年 10 月发布，其中包含许多功能改进和新模块，以完善桌面体验。
此版本添加了一个月的新翻译和来自 KDE 贡献者的修复。这些错误修复通常很小但很重要，包括：

KScreenLocker：隐藏时 X11locker 会降低 m_background。 提交。 请参阅错误 #483163
Powerdevil Daemon：不要在 PowerDevil::Core::unloadAllActiveActions() 中崩溃。 提交。修复错误#492349
发现：UpdatesPage，修复更新描述框与其文本重叠的问题。 提交。修复错误#491821

查看完整更新日志]]></description>
      <guid>https://kde.org/announcements/plasma/6/6.2.5/?utm_source=atom_feed</guid>
      <pubDate>Tue, 31 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>与 Kate 一起使用 Hugo</title>
      <link>https://redstrate.com/blog/2024/12/using-hugo-with-kate/?utm_source=atom_feed</link>
      <description><![CDATA[我使用 Hugo 来构建我的网站（您可以在 GitHub 上探索源代码。）而且因为我喜欢尽可能使用 KDE 应用程序，所以我在 Kate 中完成所有编辑 - 从配置文件、CSS 和帖子的 Markdown。
当我想编辑我的网站时，我的歌舞有点低效。我会使用 Kate，然后手动导航到我的文件夹。或者我会从命令行调用 Kate 来执行相同操作。然后我会打开一个单独的 Konsole 窗口（有时是集成终端）以启动 Hugo 来构建网站。然后我会打开一个单独的终端来执行 git 操作。
因此，我创建了一个简洁的工作流程，我认为值得分享，以防您不知道 Kate 具有这些功能。每当我想重新创建它时，这也可以为我自己提供文档。
会话
第一个也是最简单的改进是使用会话。您可以在 Kate 顶部的“会话”菜单项下管理这些会话。

无需每次都打开新的 Kate 会话，我所在的文件夹（始终是我的站点文件夹）和我打开的文档都会自动保存。
请注意，您可能需要启用 Projects 插件才能访问“Projects”选项卡，其状态也会保存在会话中。
外部工具
接下来要解决的问题是让启动 Hugo 变得更容易。我们可以通过使用“外部工具”来实现这一点，该工具可在“设置”或“工具”菜单项下进行管理。我有两个，一个用于启动 Hugo，另一个用于停止它。

这些外部工具是不言自明的，但我将工作目录设置为 %{Project:Path
以确保它在站点根目录下运行。我还将其设置为将 Hugo
输出到窗格中，但它实际上直到进程退出时才显示，这似乎是 Kate 中的一个错误。

这不是什么大问题，因为当我使用“停止 Hugo”操作时会显示输出。我建议使用“-O” hugo server 的参数，在 Hugo 完成初始化后自动打开您的默认 Web 浏览器。
Ideas
如果有一个预览窗格可以自动找到您正在编辑的 Markdown 文件并导航到它，那将很酷，这似乎是可能的。另一个优点是
一个原生 Kate 插件来处理启动/停止/配置 Hugo 服务器。但
这个工作流程已经比我以前的工作流程有了很大的改进。]]></description>
      <guid>https://redstrate.com/blog/2024/12/using-hugo-with-kate/?utm_source=atom_feed</guid>
      <pubDate>Tue, 31 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Amarok 3.2“Punkadiddle”发布！</title>
      <link>https://blogs.kde.org/2024/12/29/amarok-3.2-punkadiddle-released/?utm_source=atom_feed</link>
      <description><![CDATA[Amarok 开发小组很高兴地宣布 Amarok 3.2 “Punkadiddle” 即将推出！
2024 年 4 月，终于推出了基于 Qt5/KF5 的 Amarok 3 版本，随后发布了一系列 3.x 错误修复和功能版本。
现在，2024 年即将结束，是时候推出 Amarok 3.2.0 了。最有趣的变化可能是能够在 Qt5 和 Qt6 上构建相同的代码库。
目前，Qt5/KF5 仍然是推荐的、经过测试的配置。Qt6 版本应该可以使用，但除了任何未知问题之外，还有许多
已知问题记录在 README 中。
此外，3.2.0 包括例如收集过滤和 Ampache 相关功能及修复，最早解决的功能请求来自 2013 年。
最近已关闭多个长期存在的崩溃错误报告，并引入了针对崩溃报告数据中观察到的各种问题的可能修复。
因此，Amarok 3.2.0 的稳定性应该略有提高。
一些 3.2.x 错误修复版本预计将于 2025 年发布，之后重点将转移到“Amarok 4”的准备工作上。
自 3.1.1 以来的更改
更改：

现在可以构建实验性的 Qt6/KF6 Amarok 版本
允许通过缺少标签/空标签过滤集合（BR 325317）

更改：

Amarok 现在依赖于 KDE Frameworks 5.108
显示当前轨道上下文小程序默认

BUGFIXES:

可能修复过滤集合时偶尔发生的崩溃 (BR 492406)
可能修复清除 CompondProgressBars 时偶尔发生的崩溃
修复 Qt6/KF6 上的上下文视图小程序
修复服务器版本 5.0.0 及更高版本上的 Ampache 登录 (BR 496581)
修复 Ampache 登录重定向时发生的崩溃 (BR 396590)

3.1.0 和 3.2.0 之间的 git 存储库统计信息如下：
l10n 守护进程脚本：68 次提交，+41987，-35275
Tuomas Nurmi：46 次提交，+723，-4854
Raresh Rus：3 次提交，+41，-53
Ian Abbott：1 次提交，+17，-3
Heiko Becker：1 次提交，+0，-3
获取 Amarok
除了 源代码，Amarok 可从许多发行版的软件包存储库安装，这些存储库可能很快会更新到 3.2.0，以及 flathub 上提供的 flatpak。
Packager 部分
您可以在
download.kde.org
找到 tarball 软件包，并且已使用 Tuomas Nurmi 的 GPG 密钥。]]></description>
      <guid>https://blogs.kde.org/2024/12/29/amarok-3.2-punkadiddle-released/?utm_source=atom_feed</guid>
      <pubDate>Sun, 29 Dec 2024 19:30:00 GMT</pubDate>
    </item>
    <item>
      <title>Kdenlive 新年预览</title>
      <link>https://kdenlive.org/en/2024/12/kdenlive-new-year-preview/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://kdenlive.org/en/2024/12/kdenlive-new-year-preview/?utm_source=atom_feed</guid>
      <pubDate>Sun, 29 Dec 2024 13:10:37 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE 应用程序：#38c3</title>
      <link>https://blogs.kde.org/2024/12/29/this-week-in-kde-apps-%2338c3/?utm_source=atom_feed</link>
      <description><![CDATA[遗憾的是，本周不会有任何“本周 KDE 应用”博客文章，因为
我（Carl）和其他人正在汉堡参加 #38C3（混沌通信大会）。
但如果您也在那里，请随时过来打个招呼。


]]></description>
      <guid>https://blogs.kde.org/2024/12/29/this-week-in-kde-apps-%2338c3/?utm_source=atom_feed</guid>
      <pubDate>Sun, 29 Dec 2024 12:50:35 GMT</pubDate>
    </item>
    <item>
      <title>缩放改进</title>
      <link>https://blog.vladzahorodnii.com/2024/12/29/zoom-improvements/?utm_source=atom_feed</link>
      <description><![CDATA[屏幕放大是一种辅助功能，可以放大屏幕，使文本、图像和其他用户界面组件更易于查看或阅读。它不需要开发人员持续关注，但是，在 Plasma 6.3 中，缩放插件得到了一些改进，我想快速介绍一下。
像素网格

已删除一个脚本元素以确保 Planet 正常工作。请在原始帖子中找到它。

可以说，如果屏幕“过度”放大，阅读文本将非常困难。有几种方法可以处理这种情况。例如，可以限制放大倍数（例如，限制为 x8 或 x10），或者什么也不做，只显示模糊的放大屏幕内容……或者显示其他内容。
在旧行为中，当放大倍数达到高值时，缩放插件不会执行任何特殊操作，但在新行为中，它将在屏幕上显示单个像素。这对开发人员、设计人员等非常有用。
系统设置


除了新的像素网格模式外，缩放插件的系统设置也进行了细微的改进，使其看起来与其他配置模块更加一致。
未来的改进


键盘快捷键并不是触发缩放插件的唯一方式。例如，也可以通过按下 Meta 和 Control 键并滚动鼠标滚轮来触发缩放。但是，它不会在用户界面的任何地方显示，有些人可能更喜欢只按下 Meta 键来缩放。为了解决鼠标滚轮手势的可发现性问题并允许使用不同的修饰键组合，已经有一个补丁来添加相应的系统设置，但它是 6.4 材料。将屏幕放大器设置从桌面效果配置模块移到辅助功能配置模块也不错。
最后但并非最不重要的是，缩放效果目前使用双线性放大滤镜，可产生还不错的视觉效果，但值得寻找能够更好地处理边缘的替代升级算法，以便放大的文本看起来不那么模糊。]]></description>
      <guid>https://blog.vladzahorodnii.com/2024/12/29/zoom-improvements/?utm_source=atom_feed</guid>
      <pubDate>Sun, 29 Dec 2024 00:59:43 GMT</pubDate>
    </item>
    <item>
      <title>我需要你！</title>
      <link>https://skrooge.org/news/2024-12-29-i_need_you/?utm_source=atom_feed</link>
      <description><![CDATA[变更日志
您好，
我需要您的帮助。我创建了 Skrooge 的第一个版本，该版本可在 KF6 和 Qt6 上构建（其临时版本号为 2.33.8）。
我每天都使用它来管理自己的帐户。但是，在发布正式版本之前，我希望你们中的一些人对其进行测试并通过报告遇到的任何问题来提供反馈。
我指望你们！要开始使用，请查看 下载 部分和 README.md。
提前致谢！]]></description>
      <guid>https://skrooge.org/news/2024-12-29-i_need_you/?utm_source=atom_feed</guid>
      <pubDate>Sun, 29 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    </channel>
</rss>