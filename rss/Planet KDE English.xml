<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球 哪里 |英语</title>
    <link>https://planet.kde.org/de/</link>
    <description></description>
    <lastBuildDate>Wed, 15 Jan 2025 04:39:00 GMT</lastBuildDate>
    <item>
      <title>Tellico 4.1 发布</title>
      <link>https://tellico-project.org/tellico-4-1-released/?utm_source=atom_feed</link>
      <description><![CDATA[Tellico 4.1 现已推出，其中包含一些改进和错误修复。此版本和任何后续的 bugfix 点版本（例如 4.1.1）将是使用 Qt5 构建的最后一个版本。
改进

改进了图像加载，使其仅按需加载，缩短了本地和远程图像的加载时间（Bug 490922）。
重新设计了欢迎屏幕。
添加了禁用欢迎屏幕的选项。
添加了属性以禁用段落字段中的换行符替换。
在设置中添加了配置图像位置的工具提示。
添加了一个工具提示以显示自定义的内部字段名称字段。
调整了报告模板以遵循颜色设置。
添加了禁用文档构建的选项。
改进了数据搜索的日志记录。

错误修复

修复了打印预览（错误 496816）。
修复了打印时崩溃的错误（错误 496648）。
修复了使用 qt6ct 时的主题处理（Bug 496074）。
更新了 Dark Horse comics (Debian bug 1087109)、iTunes 搜索 和 Kino.de。
修复了使用 libcdio 在 FreeBSD 上编译的问题。
]]></description>
      <guid>https://tellico-project.org/tellico-4-1-released/?utm_source=atom_feed</guid>
      <pubDate>Wed, 15 Jan 2025 02:36:30 GMT</pubDate>
    </item>
    <item>
      <title>Kdenlive 24.12.1 发布</title>
      <link>https://kdenlive.org/en/2025/01/kdenlive-24-12-1-released/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://kdenlive.org/en/2025/01/kdenlive-24-12-1-released/?utm_source=atom_feed</guid>
      <pubDate>Tue, 14 Jan 2025 14:13:29 GMT</pubDate>
    </item>
    <item>
      <title>时钟模拟</title>
      <link>https://cukic.co/2025/01/13/clocks?utm_source=atom_feed</link>
      <description><![CDATA[如果你够老，你可能还记得 4.x 时代有一个 meme，即 Plasma 全是关于时钟的。
我开始创作一些新的艺术作品，结果却分心了，花更多的时间为 Plasma 设计有趣的时钟，而不是我计划创作的作品，这证明了这个 meme 确实有道理。
这些是基于我近年来见过的最酷的手表设计之一——Raketa Avant Garde：


时钟

]]></description>
      <guid>https://cukic.co/2025/01/13/clocks?utm_source=atom_feed</guid>
      <pubDate>Mon, 13 Jan 2025 13:11:33 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE 应用程序：可用性改进、新功能和更新的应用程序</title>
      <link>https://blogs.kde.org/2025/01/12/this-week-in-kde-apps-usability-improvements-new-features-and-updated-apps/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2025/01/12/this-week-in-kde-apps-usability-improvements-new-features-and-updated-apps/?utm_source=atom_feed</guid>
      <pubDate>Sun, 12 Jan 2025 12:50:35 GMT</pubDate>
    </item>
    <item>
      <title>kcursorgen 和 SVG 光标</title>
      <link>https://blogs.kde.org/2025/01/12/kcursorgen-and-svg-cursors/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2025/01/12/kcursorgen-and-svg-cursors/?utm_source=atom_feed</guid>
      <pubDate>Sun, 12 Jan 2025 08:00:00 GMT</pubDate>
    </item>
    <item>
      <title>接受 Tech Over Tea 采访，谈论筹款、资金和设计</title>
      <link>https://pointieststick.com/2025/01/11/interview-on-tech-over-tea-about-fundraising-money-and-design/?utm_source=atom_feed</link>
      <description><![CDATA[我最近再次与 Brodie Robertson 坐下来，参加他的Tech Over Tea 节目，这次讨论的主题是 KDE 最近的筹款活动、金钱在开源中的作用以及设计（我总是忍不住要谈论这个）。如果您对这些主题感兴趣，请查看！


]]></description>
      <guid>https://pointieststick.com/2025/01/11/interview-on-tech-over-tea-about-fundraising-money-and-design/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 Jan 2025 20:42:43 GMT</pubDate>
    </item>
    <item>
      <title>Amarok 3.2.1 发布</title>
      <link>https://blogs.kde.org/2025/01/11/amarok-3.2.1-released/?utm_source=atom_feed</link>
      <description><![CDATA[Amarok 开发小组很高兴地宣布 Amarok 3.2.1 现已推出，这是 Amarok 3.2 &quot;Punkadiddle&quot;
3.2.1 修复了一些小的 UI 错误，改进了文件传输到 MTP 设备，并针对不同组合的 Qt6 版本和编译器进行了一些编译修复，从而可以更轻松地测试 Qt6 版本。
此外，现在理论上可以在 Qt6 版本中启用 last.fm 和 gpodder.net 支持。但是，这需要 liblastfm 和 libmygpo-qt 中的 Qt6 支持；此功能尚未包含在库的最新发布版本中。
自 3.2.0 以来的更改
更改：

在 Qt6 版本中支持 gpodder 和 lastfm
当上下文视图较窄时，进一步限制当前曲目的最大字体大小

BUGFIXES：

修复 Internet 服务的设置按钮显示问题
在 Qt6 版本中启用 Wikipedia 上下文小程序
将多个文件复制到 MTP 设备时不会崩溃 (BR 467616)
避免不必要地用存储容量查询淹没 MTP 设备
针对各种编译器 + Qt6 版本组合的编译修复

获取 Amarok
除了 源代码 之外，Amarok 还可以从许多发行版的软件包存储库安装，这些存储库可能很快就会更新到 3.2.1，以及 flathub 上提供的 flatpak。
打包程序部分
您可以在
download.kde.org 上找到 tarball 包
并且它已使用 Tuomas Nurmi 的 GPG 密钥 签名。]]></description>
      <guid>https://blogs.kde.org/2025/01/11/amarok-3.2.1-released/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 Jan 2025 19:00:00 GMT</pubDate>
    </item>
    <item>
      <title>本周 Plasma：Plasma 6.3 最终功能</title>
      <link>https://blogs.kde.org/2025/01/11/this-week-in-plasma-final-plasma-6.3-features/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2025/01/11/this-week-in-plasma-final-plasma-6.3-features/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 Jan 2025 04:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Skrooge 25.1.0 发布</title>
      <link>https://skrooge.org/news/2025-01-11-skrooge_25.1.0_released/?utm_source=atom_feed</link>
      <description><![CDATA[Skrooge 团队宣布发布基于 KDE 框架 的热门个人财务管理器 25.1.0 版本。
这是 Kf6/Qt6 的第一个版本。
变更日志

修正错误 494197：将状态设置为已选中的快捷方式
修正错误 494159：CSV 导入中的小数分隔符错误
修正错误 494516：类别“已关闭”不显示
更正错误 494023：从 yahoo 下载值失败 HTTP 错误 401：未经授权
更正错误 494077：文档历史记录面板和更好的文档查看由操作修改的交易
更正错误 498157：页面侧边栏中的图标不一致
更正：用 boursorama 源替换 yahoo 源（不工作）
更正：更强大的表格副本
迁移：支持 qt6/kf6 上的构建
更正：修复由于 QDateTime::fromString 导致的 qt6 上的性能问题
]]></description>
      <guid>https://skrooge.org/news/2025-01-11-skrooge_25.1.0_released/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 Jan 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>等离子速成课程 - Sentry</title>
      <link>https://kde.haraldsitter.eu/posts/plasma-crash-course-sentry/?utm_source=atom_feed</link>
      <description><![CDATA[不久前，我的一位同事询问了我们在 Plasma 中的崩溃基础设施
以及我是否可以对此进行一些概述。我认为这对其他人来说也非常有用。我在这里，向你们讲述这一切！
我们的崩溃基础设施由许多不同的组件组成。

KCrash：一个 KDE 框架，执行崩溃拦截和准备移交给…
coredumpd：一个 systemd 组件，执行进程核心收集和移交给…
DrKonqi：一个用于崩溃的 GUI，将数据发送到…
Sentry：用于跟踪和向开发人员呈现崩溃的 Web 服务和 UI

我们已经研究过 KCrash、coredumpd 和 DrKonqi。本周是时候看看拼图的最后一块了 — Sentry。
Sentry
Sentry 是我们在崩溃开发人员端提供的服务，用于管理传入的报告。
正如我们在 DrKonqi 帖子中了解到的那样，由 preamble 创建的 Sentry 特定跟踪最终会发送到我们的 Sentry 服务器。在 Sentry 中，还会进行更多处理！
符号化
如果用户没有明确选择加入，则用户系统上通常没有可用的调试符号。这通常会使回溯变得毫无用处，因为它们只是一堆没有名称或对源代码的引用的内存地址。
我们采用 Sentry 的原因之一是因为它可以通过称为符号化的过程填补空白。对于符号化，它本质上需要知道所有已加载的库，然后可以通过各种 debuginfod 实例获取相关的调试符号。一旦有了调试符号，它就可以解析地址 0x2343244 实际上是函数 int main(int argc, char **argv)
指纹识别
当跟踪被符号化后，它就可以进行指纹识别了。这会尝试将出现在不同提交中的相同崩溃合并到一个单独的哨兵事件中。一般来说，如果两个提交具有相同的跟踪帧，则它们被视为同一次崩溃并合并为一个事件（实际上，规则有点复杂）。
结果
最终崩溃事件会出现，供我们修复。
在未来的博客文章中，我还将提供更详细的指南，说明如何充分利用 Sentry。



]]></description>
      <guid>https://kde.haraldsitter.eu/posts/plasma-crash-course-sentry/?utm_source=atom_feed</guid>
      <pubDate>Fri, 10 Jan 2025 13:11:31 GMT</pubDate>
    </item>
    </channel>
</rss>