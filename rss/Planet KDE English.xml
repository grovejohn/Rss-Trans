<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/uk/</link>
    <description></description>
    <lastBuildDate>Tue, 26 Mar 2024 14:35:24 GMT</lastBuildDate>
    <item>
      <title>生成式人工智能时代的软件工程培训</title>
      <link>https://ervin.ipsquad.net/blog/2024/03/26/software-engineering-training-in-the-age-of-generative-ai/?utm_source=atom_feed</link>
      <description><![CDATA[这是我也为 enioka 博客写的一篇文章，所以有一个 法语版本可用。

&lt;小时/&gt;

在enioka Haute Couture，我们开始提供培训不久前。
秉承我们的 DNA，我们专注于软件工程实践，而不是
给定的工具、框架或 API。这就是为什么我们开设软件等主题的课程
架构、重构、处理遗留代码、测试驱动开发（TDD）、
代码审查等等。
此外，并非每个团队都有相同的需求。有些人更喜欢在训练期间度过几天密集的时光
在一周内，其他人更喜欢在较长时间内进行较小的会议。这就是为什么我们的
课程设计灵活。它们可以定制以构建多日
会议，或一直到许多一小时的知识构建会议。
希望这一切对你来说听起来很棒（当然对我来说听起来很棒）。所以为什么
现在谈论这个？这是某种广告噱头吗？嗯……不是真的。
你看，在我们进行培训时发生了一些事情。快三年了
之前 GitHub 发布了 GitHub Copilot。当时这只是一个技术预览。
从那时起，大型语言模型（LLM）领域就开始了一场军备竞赛。
不管你喜欢与否，生成式人工智能将会继续存在，并且基于这种人工智能的代码助理
模型的使用越来越多。
我不是那些声称此类模特和助理即将消失的末日论者之一
接管我们的工作。同样，我不认为他们会加倍
开发人员的日常生产力。尽管如此，它们必然会影响我们的工作方式
以及生成的代码。因此，关注开发实践，我就更少了
担心开发人员工作岗位消失，更担心工资下降
生成的代码的质量。
事实上，早期研究表明，代码助手在引入时
未经检查的方式往往会降低代码质量并且往往会增加
引入的安全问题数量。有趣的是主要因素
突出显示的是行为。这意味着在等待神奇的新产品之前
可以完美编码的助手（剧透：这不会发生），我们应该宁愿
改进我们引入和使用这些工具的方式。
这让我回到了[enioka 高级时装培训]。在这个新时代，
我们必须在培训期间感谢编码助理。这充满了所有
我之前提到的话题。现在我们所有的软件都有一个棘手的问题
开发实践：编码助理什么时候是适合这项工作的工具？
如果您正在练习 TDD 或尝试提高对它的使用，这是一个好的选择吗？
想让编码助理为您编写测试吗？也许不是……因为它是
当你做出重要的设计决策时，你可能想继续掌舵。
可能会派上用场来生成必须通过测试的代码。
如果您正在处理需要现代化的遗留代码库，为此
编码助手会让你更快地完成这个过程吗？更新代码
到新版本的语言或依赖项？提取更清晰的模块
和功能？编写批准测试来确保所有这些？
这样的问题还有很多……您可以与我们一起探索答案
在我们的一次培训课程中。我们将继续讨论 TDD、遗留代码……
有点扭曲！
当然，就像任何其他工具一样，我们提议的并不是特定于
给定的解决方案。你使用 GitHub Copilot 吗？科迪姆？具体的内部微调
模型？这可以。我们将在培训期间考虑到这一点以适应
尽可能多地向所涉及的开发人员及其上下文提供信息。
如果您想进一步讨论此问题，请随时与我们联系。]]></description>
      <guid>https://ervin.ipsquad.net/blog/2024/03/26/software-engineering-training-in-the-age-of-generative-ai/?utm_source=atom_feed</guid>
      <pubDate>Tue, 26 Mar 2024 13:48:08 GMT</pubDate>
    </item>
    <item>
      <title>Plasma 5：早年</title>
      <link>https://blog.broulik.de/2024/03/plasma-5-the-early-years/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blog.broulik.de/2024/03/plasma-5-the-early-years/?utm_source=atom_feed</guid>
      <pubDate>Mon, 25 Mar 2024 18:09:22 GMT</pubDate>
    </item>
    <item>
      <title>Tellico 3.5.4 发布</title>
      <link>https://tellico-project.org/tellico-3-5-4-released/?utm_source=atom_feed</link>
      <description><![CDATA[Tellico 3.5.4 现已推出，并进行了一些修复。
改进和错误修复

修复了从配置对话框打开帮助的错误（错误 479591）。 
更新了开放库源代码以搜索漫画（错误 479506）。&lt; /里&gt;
修复了过滤器对话框按钮的错误（错误 479771）。
修复了条目状态的显示错误（错误 479843）。
修复了更改组字段后条目选择的错误（错误 480297）。 
修复了带有标题重音符号的 DVDFr 搜索。
更新了 FilmAffinity 数据源。
]]></description>
      <guid>https://tellico-project.org/tellico-3-5-4-released/?utm_source=atom_feed</guid>
      <pubDate>Sat, 23 Mar 2024 17:52:02 GMT</pubDate>
    </item>
    <item>
      <title>使用 QML 语言服务器进行 KDE 开发</title>
      <link>https://nicolasfella.de/posts/qmlls-for-kde-development/?utm_source=atom_feed?utm_source=atom_feed</link>
      <description><![CDATA[Qt 提供 qmlls 一段时间了，它是 QML 的语言服务器协议实现。这允许流行的文本编辑器（如 Kate）（以及一些不太知名的编辑器（如 Visual Studio Code））使用 QML 代码，而无需为其编写专门的支持。
自然很多人都渴望用它来破解 KDE 代码。当尝试这样做时，您可能会遇到一些挫折，因为事情没有按预期进行。那么那里发生了什么，我们怎样才能让它发挥作用呢？
首先必须提到的是，qmlls 仍在大力开发中。您缺少许多一些东西 ；期望实现功能齐全的 LSP。如果您遇到看似应该有效但实际上无效的情况，请立即提交错误报告。 
那么如何使用 qmlls 呢？在 Kate 中，打开 QML 文件时应该立即激活它。如果这不起作用，您可能需要调整 LSP 客户端设置。对于其他编辑器，请查阅他们的文档，了解如何启用 LSP 支持。
在 KDE 代码上使用 qmlls 时可能会遇到的一个问题是它无法找到 KDE 提供的 QML 模块（例如 Kirigami）。当模块安装到例如计算机中时，就会发生这种情况。 ~/kde/usr，Qt 不会搜索该目录。解决这个问题的一种方法是构建你自己的 Qt 并将其安装到 ~/kde/usr 中，因为这样模块将被安装到与 Qt 相同的前缀中，并且 Qt 会找到它们。虽然构建自己的 Qt 是一件值得做的事情，但总的来说，这并不是一个非常令人满意的解决方案。我希望我们能尽快找到更好的解决方案。请参阅此处获取相关错误报告。
如果您的安装设置为 qmlls 可以找到 KDE 提供的模块，您可能仍然会遇到未知模块或类型的警告。为了让 qmlls 显示模块的信息，该模块需要一个 qmltypes 文件。这些文件提供有关模块公开的类型的机器可读信息。使这些可用的最简单方法是将模块移植到 ecm_add_qml_module 并声明类型注册。许多 KDE 模块已完成此操作，但仍有许多模块缺失。非常欢迎提供帮助！不明显的是，为了使工具正常工作，需要通过 ecm_add_qml_module 中的 DEPENDENCIES 参数明确标记模块依赖项。
如果正确找到所有模块和类型，您仍然会遇到一些警告，但其中大多数应该对应于实际问题和非最佳实践，例如使用不合格的属性查找和上下文属性。 qmlls 是一个很好的工具，可以指导您解决这些问题，从而实现代码现代化和优化。然而，对于某些类型的警告，我们还没有适当的解决方案：

我们的翻译函数 i18n 和其他函数被 qmllint/qmlls 视为不合格的查找。这是因为它们在运行时神奇地注入到引擎中。目前还不清楚这个问题的解决方案是什么样的。
编写 KCM 时，我们通过 kcm 上下文属性公开模块的 C++ 类，该属性对工具来说是不透明的。需要采取不同的方法。

尽管当前存在限制，假设项目设置正确，qmlls 已经是处理 QML 代码的非常有用的工具。
QML 黑客快乐！]]></description>
      <guid>https://nicolasfella.de/posts/qmlls-for-kde-development/?utm_source=atom_feed?utm_source=atom_feed</guid>
      <pubDate>Sat, 23 Mar 2024 13:00:00 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE</title>
      <link>https://pointieststick.com/2024/03/22/this-week-in-kde-4/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://pointieststick.com/2024/03/22/this-week-in-kde-4/?utm_source=atom_feed</guid>
      <pubDate>Sat, 23 Mar 2024 05:24:14 GMT</pubDate>
    </item>
    <item>
      <title>网络评论，2024-12 周</title>
      <link>https://ervin.ipsquad.net/blog/2024/03/22/web-review-week-2024-12/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2024/03/22/web-review-week-2024-12/?utm_source=atom_feed</guid>
      <pubDate>Fri, 22 Mar 2024 11:59:28 GMT</pubDate>
    </item>
    <item>
      <title>Kubuntu 壁纸 24.04 – 征集作品</title>
      <link>https://kubuntu.org/news/kubuntu-wallpaper-24-04-call-for-submissions/?utm_source=atom_feed</link>
      <description><![CDATA[我们很高兴地宣布征集 Kubuntu 24.04 官方桌面壁纸！对于艺术家、设计师和 Kubuntu 爱好者来说，这是一个绝佳的机会，可以展示他们的才华，并为即将发布的 Kubuntu 版本的视觉形象做出贡献。
我们正在寻找什么
我们正在寻找独特、鼓舞人心且美丽的壁纸，以反映 Kubuntu 及其社区的精神。您的设计应该以其创造力吸引用户，同时也体现 Kubuntu 致力于自由、优雅和技术卓越的精髓。
提交指南
分辨率：提交的像素必须至少为 3840×2160 像素，以确保所有显示器上的高质量。
**格式：**首选 JPEG 或 PNG 格式。
原创作品：您提交的作品必须是您的原创作品，不得包含任何受版权保护的材料，除非您获得使用许可。
主题：虽然我们鼓励创造力，但您的设计应该适合广泛的受众，并符合 Kubuntu 社区的价值观和美学。
如何提交
请通过以下方式之一将您提交的壁纸发送给 Kubuntu 委员会的 Rick Timmis：
电报：https://t.me/Rick_Timmis矩阵：@rick-timmis:ubuntu.com乳齿象：@RickTimmis@mastodon.social电子邮件：rick-timmis@kubuntu.orgIRC：irc.libera.chat #kubuntu -devel @rick-timmis。
截止日期
提交的截止日期是 2024 年 3 月 31 日。我们将审核所有提交的内容并选择要包含在 Kubuntu 24.04 版本中的设计。选定的艺术家将在发行说明和我们的社交媒体平台上获得荣誉，展示您对全球用户的贡献。
让你的创造力大放异彩
这是您在 Kubuntu 社区留下印记并参与激动人心的新版本之旅的机会。我们迫不及待地想看到您提交的内容以及对 Kubuntu 向您所代表的内容的不同解释。
抓住这个机会，发挥您的创造力，帮助让 Kubuntu 24.04 成为迄今为止视觉上最令人惊叹的版本。祝所有参与者好运！]]></description>
      <guid>https://kubuntu.org/news/kubuntu-wallpaper-24-04-call-for-submissions/?utm_source=atom_feed</guid>
      <pubDate>Fri, 22 Mar 2024 08:19:03 GMT</pubDate>
    </item>
    <item>
      <title>KDE 齿轮 24.02.1</title>
      <link>https://kde.org/announcements/gear/24.02.1/?utm_source=atom_feed</link>
      <description><![CDATA[超过 180 个单独的程序以及数十个程序员库和功能插件作为 KDE Gear 的一部分同时发布。
今天，他们都获得了新的错误修复源代码版本以及更新的翻译，包括：

dolphin：最小化后不要隐藏面板（Commit，修复了错误#481952）
konversation：修复关闭系统托盘的问题（Commit，修复错误#482316)
knights：修复游戏结束时的崩溃问题（提交，修复错误#481546)

发行版和应用程序商店打包商应更新其应用程序包。

24.02 发行说明，了解有关 tarball 和已知问题的信息。
软件包下载 wiki 页面
24.02.1 源信息页面
24.02.1 完整变更日志
]]></description>
      <guid>https://kde.org/announcements/gear/24.02.1/?utm_source=atom_feed</guid>
      <pubDate>Thu, 21 Mar 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>信任 KDE 商店上的内容</title>
      <link>http://blog.davidedmundson.co.uk/blog/kde-store-content/?utm_source=atom_feed</link>
      <description><![CDATA[最近事件
kde 第三方商店上的全局主题存在问题，它执行了删除用户数据的脚本。它并不是恶意的，而是某些 shell 解析中的错误。它很快就被识别并删除，但在此之前对该用户造成了一些损害。
这引发了围绕商店、安全和上游 KDE 概念的大量讨论。主要问题是主题如何才能做到这一点？
对于开发人员来说，第三方插件可以做这种事情并不奇怪。这正如预期的那样。全局主题可以提供自定义锁屏、自定义小程序、自定义设置，所有这些都可以运行任意捆绑代码。您不能在不限制功能的情况下限制这一点。
为此，下载插件时会出现明确的警告。

期望
我们的主要问题归结为期望管理和沟通。
用户可以通过很多其他方式从互联网下载并运行任何其他不受约束的代码； Arch 用户存储库 (AUR)，添加 ubuntu PPA 等。这并不是一件坏事 - 它很有用，人们可以用它做一些令人惊奇的事情来使用户受益。
如果没有明确的用户交互，KDE 存储上也不会发生任何事情。
一个问题是，人们期望因为它是程序，所以它本质上是不安全的，并且用户需要信任源。我们的问题是像“全球主题”这样的短语。或“Plasma applet”不要总是携带此消息。
在过去的十年里，科技世界发生了很大的变化，虽然我们的代码没有改变，但用户的期望却发生了变化。越来越多的地方提供了保存完好的围墙花园，其中通过用户界面访问的大多数操作默认都是安全的 - 或者至少声称是安全的！
我还发现了一些困惑，因为我们的许多 UI 都是用高级语言 (QML) 编写的，该语言富含 javascript，所以所有浏览器沙箱都会自动应用。尽管这不是我们所声称的。
但最终，如果与期望存在差距，我们就需要解决这个问题。
我们可以在哪些方面做得更好？
短期内，我们需要清楚地传达 Plasma 用户对下载到桌面的扩展程序应有的安全期望。小程序、脚本和服务都是程序，很容易被认为是潜在风险。很难认识到 Plasma 主题、壁纸插件和 kwin 脚本不仅仅是被动的艺术作品和数据，而且还可能包含可能产生意外或恶意后果的脚本。
我们需要改善访问第三方内容的平衡，使创作者能够共享并让用户轻松获取这些内容，并进行足够的减速和检查，确保每个人都知道其中涉及哪些风险。 
kiosk 片段。
/etc/xdg/kdeglobals
[KDE 操作限制][$i]
ghns=false]]></description>
      <guid>http://blog.davidedmundson.co.uk/blog/kde-store-content/?utm_source=atom_feed</guid>
      <pubDate>Wed, 20 Mar 2024 10:59:10 GMT</pubDate>
    </item>
    <item>
      <title>启动画面贡献</title>
      <link>https://www.digikam.org/news/2024-03-20-splashscreen_contributions/?utm_source=atom_feed</link>
      <description><![CDATA[对于下一个 digiKam 版本，digiKam 团队需要 digiKam 和 Showfoto 启动画面的照片。将照片样本建议为启动画面是用户为 digiKam 项目做出贡献的一种简单方法。照片必须正确曝光/构图，并且主题必须从真正的摄影师的灵感中选择。请注意，我们将在图像底部添加一个水平框架，如当前的启动画面所示。
如果有人想贡献漂亮的照片，您可以查看之前选择的项目，然后按照说明向专用页面贡献。]]></description>
      <guid>https://www.digikam.org/news/2024-03-20-splashscreen_contributions/?utm_source=atom_feed</guid>
      <pubDate>Wed, 20 Mar 2024 00:00:00 GMT</pubDate>
    </item>
    </channel>
</rss>