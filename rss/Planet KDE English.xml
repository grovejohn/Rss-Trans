<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/de/</link>
    <description></description>
    <lastBuildDate>Sat, 04 Jan 2025 12:56:31 GMT</lastBuildDate>
    <item>
      <title>38C3 印象</title>
      <link>https://www.volkerkrause.eu/2025/01/04/kde-38c3-impressions.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://www.volkerkrause.eu/2025/01/04/kde-38c3-impressions.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 04 Jan 2025 12:00:00 GMT</pubDate>
    </item>
    <item>
      <title>本周等离子：艺术性和可访问性</title>
      <link>https://blogs.kde.org/2025/01/04/this-week-in-plasma-artistry-and-accessibility/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2025/01/04/this-week-in-plasma-artistry-and-accessibility/?utm_source=atom_feed</guid>
      <pubDate>Sat, 04 Jan 2025 04:00:00 GMT</pubDate>
    </item>
    <item>
      <title>网络评论，第 2025-01 周</title>
      <link>https://ervin.ipsquad.net/blog/2025/01/03/web-review-week-2025-01/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2025/01/03/web-review-week-2025-01/?utm_source=atom_feed</guid>
      <pubDate>Fri, 03 Jan 2025 10:15:33 GMT</pubDate>
    </item>
    <item>
      <title>为 KDE 添加家庭自动化</title>
      <link>http://blog.davidedmundson.co.uk/blog/adding-home-automation-to-kde/?utm_source=atom_feed</link>
      <description><![CDATA[
关于
顾名思义，家庭自动化主要是关于自动化的。
您每天工作时面对的机器包含大量有用信息，这些信息对您的家庭管理大有裨益。
我有一个脚本，如果我在下午打开摄像头，它会放下百叶窗，否则会产生恼人的眩光。我的办公室灯和显示器在晚上都会呈现红色，但禁用 PC 上的夜间模式也会自动禁用执行红移的主灯。我希望我的屏幕不是在活动后 10 分钟关闭，这既令人烦恼又太短，而是在我房间里的运动传感器显示我已离开的那一刻关闭。
Home Assistant 是最好的开源家庭自动化工具，它支持所有这些，但它需要一些挂钩，以便 PC 告知它当前状态并调用 PC 上的操作。
现有的解决方案都不能很好地满足我的要求。几年前，我写了一个供个人使用的东西，对我来说效果很好，我在后台运行它，并没有打算进一步使用它。
在 KDE 目标冲刺期间，另一位用户建议创建一些非常类似的东西（https://phabricator.kde.org/T17435）。这个目标可能不是我选择的，但它确实激励我整理和记录我所拥有的东西，并将其变成一个更充实的项目。
应用程序
我制作了一个小型守护进程，名为 Kiot（源自“KDE 物联网”），它将这些信息公开给您的家庭自动化软件。
这是预 alpha 软件，没有 GUI 配置，它依赖于手动设置配置文件来指向您的家庭自动化服务器。如果有足够的吸引力，我可能会让它更易于打包，并在圣诞节假期创建一个 UI 配置。
已经交付了一堆传感器和操作，但它包含一个仿插件系统，使扩展变得容易，以及用户提供的脚本的钩子。

用户活动
锁定状态
暂停/电源操作
相机正在使用
强调色
任意脚本
快捷方式
夜间模式抑制

从 Home Assistant 使用它尽可能简单。


查看
可以在 https://github.com/davidedmundson/kiot 找到存储库，其中包含设置说明如果您想制作任何其他插件，请参阅开发人员文档（https://github.com/davidedmundson/kiot/blob/master/DEVELOPMENT.md）。]]></description>
      <guid>http://blog.davidedmundson.co.uk/blog/adding-home-automation-to-kde/?utm_source=atom_feed</guid>
      <pubDate>Fri, 03 Jan 2025 09:08:52 GMT</pubDate>
    </item>
    <item>
      <title>重新制作并移植我的 KRunner 插件</title>
      <link>https://alex1701c.github.io/2025/01/03/krunner-plugins.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://alex1701c.github.io/2025/01/03/krunner-plugins.html?utm_source=atom_feed</guid>
      <pubDate>Fri, 03 Jan 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>我测量了 KDE 的提交统计数据，结果令我感到惊讶！</title>
      <link>http://blog.davidedmundson.co.uk/blog/i-measured-kdes-commit-stats-and-the-results-surprised-me/?utm_source=atom_feed</link>
      <description><![CDATA[尽管提交数量并不是衡量任何事物的完美标准，但它们仍然可以很好地表明一个项目是健康的还是摇摇欲坠的。密切关注它们很有用，年初是这样做的好时机。
我喜欢图表，每个人都喜欢图表，它们不需要进一步介绍。
框架



等离子



KWin



结论
我分享的主要原因是，在我收集一些数据之前，我对社区健康状况有一种负面感觉，但没有任何数据支持这种感觉，而且这种感觉毫无根据，当你忙于生活时，很难了解这一年的情况。
去年 KF6/Plasma 6.0 带来了一点好处，今年确实出现了相对下降，但这只是回到了以前的平均水平，没有什么可担心的。最重要的图表是我们每年获得了多少新作者和贡献者。总贡献者和新贡献者的数量相对一致。
事情没有改变，而且很无聊，这不适合写成好的帖子标题（因此需要 Youtube 级别的修饰），但对于如此大的项目来说，这是一个很好的标题。
第三张图表衡量了提交量占提交总量的多少。如果这个数字是 1，则意味着只有一名开发人员在运行该项目，如果他们离开，那将是一个不健康的环境。如果这个数字太高，则意味着没有核心团队在维护它。没有“正确”的数字，但我觉得这是一个非常有趣的指标，尤其是看到 Kwin 中发生的事情。
关于统计数据
图表是从 Curl 仪表板使用的相同脚本生成的（https://curl.se/dashboard.html）。它没有 Curl 拥有的所有统计数据，因为每个都需要一些手动操作才能使其更通用。
框架和 Plasma 统计数据是通过本地 git filter 将所有存储库分支到大型存储库并以此为基础制作的。]]></description>
      <guid>http://blog.davidedmundson.co.uk/blog/i-measured-kdes-commit-stats-and-the-results-surprised-me/?utm_source=atom_feed</guid>
      <pubDate>Thu, 02 Jan 2025 09:00:49 GMT</pubDate>
    </item>
    <item>
      <title>kdesrc-build 与第三方应用程序</title>
      <link>https://cukic.co/2025/01/01/kdesrc-build-custom?utm_source=atom_feed</link>
      <description><![CDATA[我使用几个非 KDE Qt 应用程序，我倾向于从源代码手动编译这些应用程序，以使用与我编译 KDE 软件时所针对的非发行版提供的 Qt 版本相同的版本。
我注意到，我更新它们的频率不如系统其他部分那么高，所以我决定看看是否可以将它们添加到
kdesrc-build。
要构建的软件包定义位于
repo-metadata/module-definictions，其中已经包含 KDE 框架和应用程序使用的几个第三方库。
将 Strawberry 播放器（Clementine 的分支，Clementine 是 Amarok 1.x 的分支）添加到构建中非常简单。我只需要
定义存储库、cmake 选项以使其构建
Qt6 版本而不是 Qt5 版本，以及我想要从中构建的分支。
module strawberry
存储库 https://github.com/strawberrymusicplayer/strawberry.git
cmake-options -DBUILD_WITH_QT6=ON
分支 master
end module
对于具有正常 cmake 设置的应用程序，就是这么简单。但有些应用程序（如 recoll）在顶层没有 CMakeLists.txt 文件，而
kdesrc-build 不喜欢这样。
为了确保 kdesrc-build 找到 cmake 的真实 src 目录，我需要做一些完全黑客的事情。我
必须将源目录的路径传递给 cmake-options，否则该路径将由 kdesrc-build 自动为其构建的每个项目定义：
module recoll
存储库 https://framagit.org/medoc92/recoll.git
cmake-options \
-DRECOLL_QT6_BUILD=1 \
-DRECOLL_ENABLE_SYSTEMD=0 \
-DRECOLL_ENABLE_WEBENGINE=1 \
-DRECOLL_ENABLE_X11MON=0 \
-S /kde/src/recoll/src
分支 master
结束模块
幸运的是，kdesrc-build 附加了
cmake-options 正常的 cmake 参数，因此
我的 -S 路径覆盖了路径kdesrc-build 定义。
]]></description>
      <guid>https://cukic.co/2025/01/01/kdesrc-build-custom?utm_source=atom_feed</guid>
      <pubDate>Wed, 01 Jan 2025 10:50:33 GMT</pubDate>
    </item>
    <item>
      <title>KDE：应用程序快照 24.12.0 版本及更多内容</title>
      <link>https://www.scarlettgatelymoore.dev/kde-application-snaps-24-12-0-release-and-more/?utm_source=atom_feed</link>
      <description><![CDATA[

https://kde.org/announcements/gear/24.12.0
希望大家节日愉快！我送给您的礼物是闪亮的新应用程序快照！此版本中有几个新的 qt6 端口。请访问 https://snapcraft.io/store?q=kde
我还修复了 Krita snap 无法打开/保存的 bug。请测试 –edge！
我正在继续进行 core24 支持工作，希望在下一个版本之前完成。
我真的很期待 2025 年！2024 年滚蛋吧！
如果你能帮我解决气体问题，我还有 3 周的治疗时间。感谢您一直以来的支持。
https://gofund.me/573cc38e]]></description>
      <guid>https://www.scarlettgatelymoore.dev/kde-application-snaps-24-12-0-release-and-more/?utm_source=atom_feed</guid>
      <pubDate>Tue, 31 Dec 2024 14:34:48 GMT</pubDate>
    </item>
    <item>
      <title>KDE Plasma 6.2.5，12 月错误修复版本</title>
      <link>https://kde.org/announcements/plasma/6/6.2.5/?utm_source=atom_feed</link>
      <description><![CDATA[2024 年 12 月 31 日，星期二。今天，KDE 发布了 KDE Plasma 6 的错误修复更新，版本号为 6.2.5。
Plasma 6.2 于 2024 年 10 月发布，其中包含许多功能改进和新模块，以完善桌面体验。
此版本添加了一个月的新翻译和来自 KDE 贡献者的修复。这些错误修复通常很小但很重要，包括：

KScreenLocker：隐藏时 X11locker 会降低 m_background。 提交。 请参阅错误 #483163
Powerdevil Daemon：不要在 PowerDevil::Core::unloadAllActiveActions() 中崩溃。 提交。修复错误#492349
发现：UpdatesPage，修复更新描述框与其文本重叠的问题。 提交。修复错误#491821

查看完整更新日志]]></description>
      <guid>https://kde.org/announcements/plasma/6/6.2.5/?utm_source=atom_feed</guid>
      <pubDate>Tue, 31 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>与 Kate 一起使用 Hugo</title>
      <link>https://redstrate.com/blog/2024/12/using-hugo-with-kate/?utm_source=atom_feed</link>
      <description><![CDATA[我使用 Hugo 来构建我的网站（您可以在 GitHub 上探索源代码。）而且因为我喜欢尽可能使用 KDE 应用程序，所以我在 Kate 中完成所有编辑 - 从配置文件、CSS 和帖子的 Markdown。
当我想编辑我的网站时，我的歌舞有点低效。我会使用 Kate，然后手动导航到我的文件夹。或者我会从命令行调用 Kate 来执行相同操作。然后我会打开一个单独的 Konsole 窗口（有时是集成终端）以启动 Hugo 来构建网站。然后我会打开一个单独的终端来执行 git 操作。
因此，我创建了一个简洁的工作流程，我认为值得分享，以防您不知道 Kate 具有这些功能。每当我想重新创建它时，这也可以为我自己提供文档。
会话
第一个也是最简单的改进是使用会话。您可以在 Kate 顶部的“会话”菜单项下管理这些会话。

无需每次都打开新的 Kate 会话，我所在的文件夹（始终是我的站点文件夹）和我打开的文档都会自动保存。
请注意，您可能需要启用 Projects 插件才能访问“Projects”选项卡，其状态也会保存在会话中。
外部工具
接下来要解决的问题是让启动 Hugo 变得更容易。我们可以通过使用“外部工具”来实现这一点，该工具可在“设置”或“工具”菜单项下进行管理。我有两个，一个用于启动 Hugo，另一个用于停止它。

这些外部工具是不言自明的，但我将工作目录设置为 %{Project:Path
以确保它在站点根目录下运行。我还将其设置为将 Hugo
输出到窗格中，但它实际上直到进程退出时才显示，这似乎是 Kate 中的一个错误。

这不是什么大问题，因为当我使用“停止 Hugo”操作时会显示输出。我建议使用“-O” hugo server 的参数，在 Hugo 完成初始化后自动打开您的默认 Web 浏览器。
Ideas
如果有一个预览窗格可以自动找到您正在编辑的 Markdown 文件并导航到它，那将很酷，这似乎是可能的。另一个优点是
一个原生 Kate 插件来处理启动/停止/配置 Hugo 服务器。但
这个工作流程已经比我以前的工作流程有了很大的改进。]]></description>
      <guid>https://redstrate.com/blog/2024/12/using-hugo-with-kate/?utm_source=atom_feed</guid>
      <pubDate>Tue, 31 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    </channel>
</rss>