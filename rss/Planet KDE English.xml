<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/de/</link>
    <description></description>
    <lastBuildDate>Fri, 06 Dec 2024 22:41:10 GMT</lastBuildDate>
    <item>
      <title>网络评论，第 2024-49 周</title>
      <link>https://ervin.ipsquad.net/blog/2024/12/06/web-review-week-2024-49/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2024/12/06/web-review-week-2024-49/?utm_source=atom_feed</guid>
      <pubDate>Fri, 06 Dec 2024 14:02:22 GMT</pubDate>
    </item>
    <item>
      <title>冰淇淋！</title>
      <link>https://vizZzion.org/blog/2024/12/icecream/?utm_source=atom_feed</link>
      <description><![CDATA[最近 KDE 黑客攻击很多，这需要编译大量代码。现在，我正在一台“旧”笔记本电脑上安装并从源代码构建 Plasma Mobile，以便我可以在触摸屏设备上本地测试一些补丁。这台机器只有两个核心（超线程），因此构建需要相当长的时间，特别是如果您构建 Qt 和完全正常运行的 Plasma 系统所需的所有 80 多个软件包。icecream 是功能强大且使用起来非常灵活的工具之一。 Icecream（或“icecc”）允许您将构建分发到多台机器上，它基本上将编译作业连同所需的一切一起发送到本地网络上的其他机器，这意味着您可以并行构建。 

Icecream 有一个很棒的可视化工具，称为 icecream-monitor，您可以在构建运行时盯着它（以防您身边没有人可以进行剑斗）。在屏幕截图中，您可以看到 manta，这台性能不足的笔记本电脑通过网络执行 32 个并行作业构建。 miro 是我的重型工作站，有 8 个核心和 128GB 的​​ RAM，它理所当然地承担了大部分分配的工作，frame 是我的 (Framework) 笔记本电脑，它也相当强大，也可以做一些事情，但负担不会像我地下室办公室里的那个构建怪物那么重。Icecream 可以在大多数让你在本地运行编译器的环境中使用。不同的发行版没有问题！只需要匹配的 CPU 架构。Icecream 通过提供自己的 g++ 和 gcc 二进制文件来完成其工作，这些二进制文件将透明地将构建作业中继到您的本地计算机或通过网络。因此，您基本上只需安装它，调整 PATH 变量以确保在系统编译器之前找到 icecc 的 g++，然后开始构建。您想要加入的其他机器只需运行 icecc-scheduler，它们将自动被发现为网络上的构建从属。如果您想进一步加快构建速度，它也可以与 ccache 一起使用。
请注意，您只想在受信任的环境中执行此操作，我们正在未经授权的情况下在网络上发送可执行文件！]]></description>
      <guid>https://vizZzion.org/blog/2024/12/icecream/?utm_source=atom_feed</guid>
      <pubDate>Thu, 05 Dec 2024 21:28:46 GMT</pubDate>
    </item>
    <item>
      <title>硬件恶作剧</title>
      <link>https://blog.broulik.de/2024/12/hardware-shenanigans/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blog.broulik.de/2024/12/hardware-shenanigans/?utm_source=atom_feed</guid>
      <pubDate>Thu, 05 Dec 2024 12:00:00 GMT</pubDate>
    </item>
    <item>
      <title>KStars v3.7.4 发布</title>
      <link>http://knro.blogspot.com/2024/12/kstars-v374-is-released.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>http://knro.blogspot.com/2024/12/kstars-v374-is-released.html?utm_source=atom_feed</guid>
      <pubDate>Thu, 05 Dec 2024 06:04:00 GMT</pubDate>
    </item>
    <item>
      <title>被黑客入侵，现在是手术的季节</title>
      <link>https://www.scarlettgatelymoore.dev/hacked-and-tis-the-season-for-surgeries/?utm_source=atom_feed</link>
      <description><![CDATA[我还在这里。不幸的是，当我在与 7 月份手臂骨折导致的严重感染作斗争时，黑客入侵了我的博客。我正在慢慢地重建它。更糟糕的是，我还要接受更多手术，明天是第一个。由于住院和康复，我无法开始找工作，这加剧了我目前的困境。请考虑捐款。https://gofund.me/6e99345d
在开源工作方面，我仍在做一些事情，主要是 snap（Apps 24.08.3 发布）
感谢所有投票让我进入 Ubuntu 社区委员会的人！
我试图保持乐观，但似乎无法休息。我会把电脑放在医院里，做我能做的事情。祝您有个愉快的一天，期待您的再次光临。
斯嘉丽]]></description>
      <guid>https://www.scarlettgatelymoore.dev/hacked-and-tis-the-season-for-surgeries/?utm_source=atom_feed</guid>
      <pubDate>Wed, 04 Dec 2024 17:30:40 GMT</pubDate>
    </item>
    <item>
      <title>凯特-1500 个合并请求已接受！</title>
      <link>https://kate-editor.org/post/2024/2024-12-02-kate-1500-accepted-merge-requests/?utm_source=atom_feed</link>
      <description><![CDATA[我今天刚刚查看了我们的 GitLab 页面，心想：太棒了！





感谢大家上一次的巨大贡献年。
希望未来我们能看到更多贡献。
如果您不确定如何贡献，只需查看现有的合并的内容作为参考。
即将发布的 24.12 版本将是一个不错的版本，我们确实对 Kate 进行了大量完善。
我知道世界上并非一切都好，但我仍然希望您能度过美好的一年，并在新的一年里有一个更好的开始！]]></description>
      <guid>https://kate-editor.org/post/2024/2024-12-02-kate-1500-accepted-merge-requests/?utm_source=atom_feed</guid>
      <pubDate>Mon, 02 Dec 2024 19:25:00 GMT</pubDate>
    </item>
    <item>
      <title>我认为捐赠通知有效</title>
      <link>https://pointieststick.com/2024/12/02/i-think-the-donation-notification-works/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://pointieststick.com/2024/12/02/i-think-the-donation-notification-works/?utm_source=atom_feed</guid>
      <pubDate>Mon, 02 Dec 2024 07:09:59 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE 应用程序中：OptiImage 首次发布，Itinerary 重新设计等等</title>
      <link>https://blogs.kde.org/2024/12/01/this-week-in-kde-apps-optiimage-first-release-itinerary-redesign-and-more/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2024/12/01/this-week-in-kde-apps-optiimage-first-release-itinerary-redesign-and-more/?utm_source=atom_feed</guid>
      <pubDate>Sun, 01 Dec 2024 11:20:35 GMT</pubDate>
    </item>
    <item>
      <title>Debian 中的 QML 依赖跟踪</title>
      <link>https://blog.sandroknauss.de/QMLDependencyTrackingInDebian/?utm_source=atom_feed</link>
      <description><![CDATA[Debian 中的跟踪库依赖关系功能可从符号使用解析到库，并将其添加到依赖关系列表中。
多年来一直如此。
如今，KDE 社区创建了越来越多的基于 QML 的应用程序。
不幸的是，QML 是一种解释型语言，这意味着缺少 QML 依赖关系只会在运行时出现问题。
为了解决这个问题，我创建了 dh_qmldeps，它在构建时搜索 QML 依赖关系，如果无法解析 QML 依赖关系，则会失败。
我没有创建自己的 QML 解释器，只是在后台使用 qmlimportscanner 并进一步处理输出以将 QML 模块解析为 Debian 包。
工作流程如下：
包正常编译并拆分为二进制包。
然后 dh_qmldeps 扫描软件包内容以查找 QML 内容（.qml 文件，或 QML 模块的 qmldir）。
所有找到的文件都将由 qmlimportscanner 扫描，输出是依赖的 QML 模块列表。
由于 QML 模块具有标准化的文件路径，我们可以询问 Debian 系统，哪些软件包附带此文件路径。
我们最终在变量 ${qml6:Depends 中得到 Debian 软件包列表。
此变量可以附加到扫描软件包的依赖项列表中。
如果需要，维护者还可以降低某些依赖性以推荐或建议。
您可以在salsa上找到源代码，并在https://qt-kde-team.pages.debian.net/dh_qmldeps.html上找到使用文档。
最近几周，我为每个新包启用了dh_qmldeps，从而创建了一个 QML6 模块包。
因此，第一个错误已解决，它应该可用于更多软件包。
通过使用 qmlimportscanner 扫描所有代码，我发现了几个不存在的 QML 模块：

import QtQuick3DPrivate qt6-multimedia - 没有私有 QML 模块 QTBUG-131753。
import QtQuickPrivate qt6-graphs - 没有私有 QML 模块 QTBUG-131754。
import QtQuickTimeline qt6-quicktimeline - 正确的 QML 名称是 QtQuick.Timeline QTBUG-131755。
import QtQuickControls2 qt6-webengine - 看起来像是移植错误，因为 QML6 模块名称是 QtQuick.Controls QTBUG-131756。
import QtGraphicalEffects kquickimageeditor - QML6 的正确名称是qt5compat.graphicaleffects，因为它是一个例子，没有人检查它kquickimageeditor!7。

是的 - 第一个里程碑已经达到。
我们能够简单地处理 QML 模块。
但 QML 应用程序仍有改进空间。
在应用程序中，QML 文件位于可执行文件中。
此外，应用程序创建内部 QML 模块，这些模块直接在同一个可执行文件中发送。
我仍然在寻找一种分析可执行文件的好方法，以获取内部 QML 模块列表和包含的 QML 文件列表。
欢迎任何想法 :)
作为解决方法，dh_qmldeps 当前扫描应用程序源代码中的所有 QML 文件。]]></description>
      <guid>https://blog.sandroknauss.de/QMLDependencyTrackingInDebian/?utm_source=atom_feed</guid>
      <pubDate>Sun, 01 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>KDE Gear 24.11.90 可在 Fedora 41（COPR）上使用</title>
      <link>https://blog.marcdeop.com/2024/11/30/kde-gear-24-11-90-available-on-fedora-41-copr/?utm_source=atom_feed</link>
      <description><![CDATA[Fedora KDE SIG 很高兴地宣布 KDE Gear 24.12 RC (24.11.90) 已在 Fedora 41 上通过我们的 @kdesig/kde-beta COPR 存储库 提供 尽情享用吧！]]></description>
      <guid>https://blog.marcdeop.com/2024/11/30/kde-gear-24-11-90-available-on-fedora-41-copr/?utm_source=atom_feed</guid>
      <pubDate>Sat, 30 Nov 2024 21:31:20 GMT</pubDate>
    </item>
    </channel>
</rss>