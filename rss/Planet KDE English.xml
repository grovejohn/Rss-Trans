<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/uk/</link>
    <description></description>
    <lastBuildDate>Tue, 14 May 2024 09:35:44 GMT</lastBuildDate>
    <item>
      <title>介绍格式化插件</title>
      <link>https://kate-editor.org/post/2024/2024-05-13-kate-formatting-plugin/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://kate-editor.org/post/2024/2024-05-13-kate-formatting-plugin/?utm_source=atom_feed</guid>
      <pubDate>Mon, 13 May 2024 17:35:50 GMT</pubDate>
    </item>
    <item>
      <title>KDE 目标 2024 年 4 月冲刺</title>
      <link>https://tsdgeos.blogspot.com/2024/05/kde-goals-april-2024-sprint.html?utm_source=atom_feed</link>
      <description><![CDATA[几周前，我参加了2024 年 4 月 KDE 目标冲刺 我是作为自动化和技术项目的一部分在那里的。鉴于我参与了发布过程，系统化冲刺，关于 CI 状态的“不是很自动化”的每周电子邮件KDE Gear 和 KDE 框架等，但我认为也许我更多的是作为“已经存在很长时间的人，如果你对通过口头传统记录的事情有疑问”我最终并没有在 sprint 主题上做很多工作（尽管我参与了各种讨论，与 Aleix 就 QML 可访问性问题进行了一些结对编程，启发 DavidR 做了 QML-text-missing -i18n 检查他在他的博客中的描述）；相反，我作了一点，并使用冲刺来专注于我积压的一些 KDE 内容，创建 KDE Gear 版本/24.05 分支和大量 MR 审查等等！您的持续捐款&lt; p&gt;请记住，Academy 演讲提交期将在 10 天后结束，立即发送您的演讲！]]></description>
      <guid>https://tsdgeos.blogspot.com/2024/05/kde-goals-april-2024-sprint.html?utm_source=atom_feed</guid>
      <pubDate>Mon, 13 May 2024 12:41:00 GMT</pubDate>
    </item>
    <item>
      <title>digiKam 食谱 2024-05-13 发布</title>
      <link>https://www.digikam.org/news/2024-04-13_digikam_recipes_2024-05-13_released/?utm_source=atom_feed</link>
      <description><![CDATA[digiKam 食谱的新版本可供您阅读。新版本涵盖了 digiKam 8.3 中引入的自动标记功能，并解释了如何在容器中运行 digiKam。
如果您通过 Gumroad 购买了该书，您将在“图书馆”部分找到新版本。通过 Google Play 购买的图书应该会自动更新到最新版本。如果您在获取本书的最新版本时遇到问题，请通过 dmpop@cameracode 与作者联系。]]></description>
      <guid>https://www.digikam.org/news/2024-04-13_digikam_recipes_2024-05-13_released/?utm_source=atom_feed</guid>
      <pubDate>Mon, 13 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>增强版 KubuQA 简介：跨 Ubuntu 风格彻底改变 ISO 测试</title>
      <link>https://kubuntu.org/news/introducing-the-enhanced-kubuqa-revolutionising-iso-testing-across-ubuntu-flavors/?utm_source=atom_feed</link>
      <description><![CDATA[Kubuntu 团队很高兴地宣布对 KubuQA 进行重大更新，这是我们简化的 ISO 测试工具，现已将其功能扩展到 Kubuntu 之外，以支持 Ubuntu 及其所有其他版本。凭借这些增强功能，KubuQA 成为一种多功能资源，可确保即将发布的版本（包括 24.04 Noble Numbat 和 24.10 Oraulous Oriole）的测试过程更顺畅、更直观。
什么是 KubuQA？
KubuQA 是 Kubuntu 团队开发的一款专门工具，用于简化 ISO 测试过程。 KubuQA 利用 Kdialog 的强大用户友好图形界面和 VirtualBox 的强大功能来创建和管理虚拟环境，让测试人员能够高效评估 ISO 映像。其设计侧重于可访问性，通过提供清晰的指导性 ISO 测试步骤，使所有技能水平的测试人员都能轻松参与开发过程。
新功能和扩展
KubuQA 的最新更新标志着其实用性的显着扩展：
更广泛的覆盖范围：KubuQA 最初是为 Kubuntu 定制的，现在支持测试 Ubuntu 和所有其他 Ubuntu 版本的 ISO 映像。这种扩大的覆盖范围确保任何基于 Ubuntu 的社区都可以从 KubuQA 提供的强大测试框架中受益。支持最新版本：KubuQA 已更新，包括对最新版本的支持Ubuntu 发布周期，包括 24.04 Noble Numbat 和即将推出的 24.10 Oraulous Oriole。这确保社区可以尽早、经常地开始测试，从而发布更稳定、更完善的版本。增强的用户体验：通过改进 Kdialog 交互，测试人员会发现界面更加流畅。直观且响应灵敏，增强了整体测试体验。
呼吁 Ubuntu Flavor 潜在客户采取行动
Kubuntu 团队热衷于与所有 Ubuntu 版本的领导者和测试人员密切合作，采用和调整 KubuQA 以满足他们的测试需求。我们相信，通过共享这个工具，我们可以在整个 Ubuntu 生态系统中培育一个更强大、更有凝聚力的测试社区。
我们鼓励风味主管尝试 KubuQA，将其集成到他们的测试流程中，并与我们分享反馈。此次合作不仅将改进该工具，还将确保所有 Ubuntu 版本都能在其版本中实现更高的质量和稳定性。
参与其中
对于那些有兴趣使用 KubuQA 参与 ISO 测试的人：
下载工具：您可以在 Kubuntu 上找到 KubuQA Github 团队。加入社区：加入 Kubuntu 社区以获得支持并与其他测试人员联系。您的贡献和反馈对于 KubuQA 的持续改进非常宝贵。
结论
KubuQA 的增强体现了我们对提高 Ubuntu 及其衍生产品的质量和可靠性的承诺。通过扩大其覆盖范围并简化测试流程，我们的目标是让更多的贡献者参与开发周期。无论您是经验丰富的测试人员还是社区新手，您的努力对于 Ubuntu 的成功都至关重要。
我们期待看到不同的社区将如何利用 KubuQA 来增强他们的测试实践。顺便问一下，您是否考虑过成为 Kubuntu 社区 的成员？立即加入我们，为开源软件世界带来改变！]]></description>
      <guid>https://kubuntu.org/news/introducing-the-enhanced-kubuqa-revolutionising-iso-testing-across-ubuntu-flavors/?utm_source=atom_feed</guid>
      <pubDate>Sun, 12 May 2024 21:28:33 GMT</pubDate>
    </item>
    <item>
      <title>KDE 应用程序和图标</title>
      <link>https://cullmann.io/posts/kde-applications-and-icons/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://cullmann.io/posts/kde-applications-and-icons/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 May 2024 18:30:01 GMT</pubDate>
    </item>
    <item>
      <title>你好，星球在哪里！</title>
      <link>https://alcarazzam.dev/posts/hello-planet-kde/?utm_source=atom_feed</link>
      <description><![CDATA[你好 KDE 星球！
我今年将参加 Google Summer of Code，为 KDE 框架的子集添加 Python 支持。您可以在此博客上关注我的进展。]]></description>
      <guid>https://alcarazzam.dev/posts/hello-planet-kde/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 May 2024 13:31:23 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE：我们的杯子里充满了为您准备的酷玩意儿</title>
      <link>https://pointieststick.com/2024/05/10/this-week-in-kde-our-cup-overfloweth-with-cool-stuff-for-you/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://pointieststick.com/2024/05/10/this-week-in-kde-our-cup-overfloweth-with-cool-stuff-for-you/?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 May 2024 03:43:26 GMT</pubDate>
    </item>
    <item>
      <title>KWin 中的 HDR 和色彩管理，第 3 部分</title>
      <link>https://zamundaaa.github.io/wayland/2024/05/11/more-hdr-and-color.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://zamundaaa.github.io/wayland/2024/05/11/more-hdr-and-color.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 11 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>使用 QML 语言服务器进行 KDE 开发（更新）</title>
      <link>https://nicolasfella.de/posts/qmlls-for-kde-development-2/?utm_source=atom_feed?utm_source=atom_feed</link>
      <description><![CDATA[在上一篇文章中，我谈到了使用 QML 语言服务器进行 KDE 开发。自从写那篇文章以来，发生了一些事情，所以是时候进行更新了。
我提到过，使用 Kate qmllls 在打开 QML 文件时应该开箱即用。这基本上是正确的，但有一个问题。根据您的发行版，qmlls 的二进制文件具有不同的名称。有时是 qmlls，有时是 qmlls6 或 qmlls-qt6。您可能需要调整 Kate 中的 LSP 服务器设置以匹配您系统上的名称。
为了让 qmlls 找到在应用程序的 C++ 代码中定义的类型，这些类型不仅必须以声明方式注册，还需要告诉 qmlls 在哪里可以找到类型信息。幸运的是 Qt 6.7 附带了一个方便的方法来做到这一点。通过将 -DQT_QML_GENERATE_QMLLS_INI=ON 传递给 CMake，您将生成一个适当的配置文件。这将被放置到项目的源目录中，但特定于您的设置，因此将其添加到您的 gitignore 文件中（PS：您可以为您的系统设置一个全局 gitignore 文件，因此您不需要将其添加到您的所有项目）。不幸的是，最初的实现为某些模块产生了错误配置，但这是已在 Qt 6.7.2 中修复。
我提到的一个问题是 qmlls 找不到未安装到与 Qt 相同路径的模块。 Qt 6.8 将有两个新选项。 -I 参数允许将自定义导入路径添加到 qmlls 中。搜索路径。 -E 参数使 qmlls 考虑其搜索路径的 QML_IMPORT_PATH 环境变量的值。
为了使 qmll 正常工作，需要使用 CMake API 创建模块并使用声明式类型注册。自撰写上一篇文章以来，一些 KDE 模块已转换为这些模块，但仍有更多工作要做。
感谢 QML 团队的快速改进！]]></description>
      <guid>https://nicolasfella.de/posts/qmlls-for-kde-development-2/?utm_source=atom_feed?utm_source=atom_feed</guid>
      <pubDate>Fri, 10 May 2024 10:30:00 GMT</pubDate>
    </item>
    <item>
      <title>网络评论，2024-19 周</title>
      <link>https://ervin.ipsquad.net/blog/2024/05/10/web-review-week-2024-19/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2024/05/10/web-review-week-2024-19/?utm_source=atom_feed</guid>
      <pubDate>Fri, 10 May 2024 09:18:18 GMT</pubDate>
    </item>
    </channel>
</rss>