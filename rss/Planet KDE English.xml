<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/uk/</link>
    <description></description>
    <lastBuildDate>Sun, 30 Jun 2024 18:37:49 GMT</lastBuildDate>
    <item>
      <title>KDE 参加 OSPP 2024</title>
      <link>https://mentorship.kde.org/blog/2024-06-30-ospp/?utm_source=atom_feed</link>
      <description><![CDATA[KDE 参与 OSPP 2024
我们很高兴地宣布，我们将参与 开源促进计划 (OSPP) 2024。KDE 将指导该计划内的一个项目。OSPP 主要由中国科学院软件研究所组织。其目标是鼓励大学生参与开发和维护开源软件。
这是 KDE 社区参与 OSPP 的第一年，我们指导了一个项目。
将 KDE 游戏移植到 Android 平台
KDE 游戏和教育游戏是 KDE Gear 套件不可或缺的一部分。今年，在Benson Muite的指导下，Hanyang Zhang 将承担这方面的工作。Hanyang Zhang将负责将一到两款 KDE 游戏移植到 Android 平台。
让我们热烈欢迎新的贡献者，并祝他们在 KDE 度过一个愉快的夏天！]]></description>
      <guid>https://mentorship.kde.org/blog/2024-06-30-ospp/?utm_source=atom_feed</guid>
      <pubDate>Sun, 30 Jun 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE 中：我认为一切</title>
      <link>https://pointieststick.com/2024/06/28/this-week-in-kde-everything-i-think/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://pointieststick.com/2024/06/28/this-week-in-kde-everything-i-think/?utm_source=atom_feed</guid>
      <pubDate>Sat, 29 Jun 2024 00:18:24 GMT</pubDate>
    </item>
    <item>
      <title>关于我参与创作 Plasma 6.1 壁纸“Reef”</title>
      <link>https://wordsmith.social/felix-ernst/about-my-part-in-the-creation-of-the-plasma-6-1-wallpaper-reef?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://wordsmith.social/felix-ernst/about-my-part-in-the-creation-of-the-plasma-6-1-wallpaper-reef?utm_source=atom_feed</guid>
      <pubDate>Fri, 28 Jun 2024 18:33:47 GMT</pubDate>
    </item>
    <item>
      <title>网络评论，第 2024-26 周</title>
      <link>https://ervin.ipsquad.net/blog/2024/06/28/web-review-week-2024-26/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://ervin.ipsquad.net/blog/2024/06/28/web-review-week-2024-26/?utm_source=atom_feed</guid>
      <pubDate>Fri, 28 Jun 2024 15:52:28 GMT</pubDate>
    </item>
    <item>
      <title>马克诺特 1.3</title>
      <link>https://blogs.kde.org/2024/06/28/marknote-1.3/?utm_source=atom_feed</link>
      <description><![CDATA[Marknote 1.2 发布至今已近两个月。Marknote 是一款使用 Markdown 的富文本编辑器和笔记管理工具。自发布以来，由于所有贡献者的努力，它发生了很大变化，并添加了许多新功能！
用户界面
在小手机屏幕上，您希望有尽可能多的空间来书写和阅读您的笔记。 Marknote 现在允许您在移动设备上隐藏编辑器工具栏，这样您就可以专注于重要内容，同时只需轻点一下即可获得格式选项。



在桌面上，您现在可以通过拖动分隔符来调整笔记列表和编辑器的宽度，就像在其他桌面应用程序中一样。



现在您可以使用 UI 中的按钮撤消和重做更改，而不必依赖键盘快捷键，如果您使用的虚拟键盘可能没有控制键，这尤其有用。
应用程序菜单已重新组织并简化为让它不那么杂乱。
Carl 在响应式图像方面的工作终于在 Qt 中实现，现在也出现在 Marknote 中。这意味着图像不再在小屏幕上被裁剪。
Volker 实现了可点击链接！您现在可以按住 Ctrl 键并单击链接来打开它们。
切换到 Marknote
为了更轻松地从当前的笔记应用程序切换到 Marknote，Marknote 现在提供了几个导入选项。现在，您可以从 KNotes 和 maildir 导入笔记。
首选项
设置现在不再在覆盖对话框中打开，现在显示在 Kirigami Addons 的新 ConfigurationView 中。
感谢 Garry Wang，您现在可以直接从 Marknote 的首选项中更改颜色主题。





错误修复

如果笔记列表的标题太长，它不再与按钮重叠，现在它被隐藏了。
笔记列表现在滚动时与标题重叠的时间更长。
在触摸设备上打开笔记不再每次都打开选项菜单。
感谢 Carl，Windows 上的文件创建问题已得到修复，因此您也可以在那里使用
草图功能。

获取它
Marknote 可在 Flathub 上获得。
Packager 部分
您可以在
download.kde.org
找到该软件包，并且它已与我的 Carl 的 GPG 密钥。]]></description>
      <guid>https://blogs.kde.org/2024/06/28/marknote-1.3/?utm_source=atom_feed</guid>
      <pubDate>Fri, 28 Jun 2024 09:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Qt Creator 14 Beta2 发布</title>
      <link>https://www.qt.io/blog/qt-creator-14-beta2-released?utm_source=atom_feed</link>
      <description><![CDATA[我们很高兴地宣布 Qt Creator 14 Beta2 正式发布！
]]></description>
      <guid>https://www.qt.io/blog/qt-creator-14-beta2-released?utm_source=atom_feed</guid>
      <pubDate>Thu, 27 Jun 2024 10:34:48 GMT</pubDate>
    </item>
    <item>
      <title>更智能的 Rust 方式</title>
      <link>https://www.kdab.com/the-smarter-way-to-rust/?utm_source=atom_feed</link>
      <description><![CDATA[如果您一直在关注我们的博客，您可能已经意识到 Rust 在嵌入式系统中的影响力越来越大。虽然 Rust 在安全设计方面表现出色，但它也经常与 C++ 集成。这种战略方法充分利用了两种语言的优势，包括多年来在复杂嵌入式系统中磨练出的大量 C++ 功能。让我们深入研究集成 Rust 和 C++ 的一些关键概念。
将 Rust 添加到 C++
如果您要将 Rust 添加到现有的 C++ 项目中，则需要从正确的地方开始。首先氧化（即将代码转换为 Rust）容易出现错误、难以维护或存在安全漏洞的区域。这些是 Rust 可以提供即时改进的地方。专注于自包含、具有干净接口且主要为程序而非面向对象的模块。例如，处理媒体或图像处理的库可能是用 Rust 重写的主要候选者，因为这些库通常容易受到内存安全问题的影响。解析器和输入处理例程也将受益于 Rust 的安全保证。
决定从外到内还是从内到外使用 Rust
随着项目规模的扩大，请权衡使用 Rust 组件维护 C++ 核心与使用 C++ 库维护以 Rust 为中心的应用程序的优点。对于规模较小、较新的项目，从 Rust 开始可能有助于您避免处理 C 外部函数接口 (FFI) 的复杂性。此决定可能取决于您的安全优先级：如果您的项目的核心租户是安全，那么以 Rust 为中心的方法可能更可取。相反，如果仅在 C++ 项目的某些领域需要安全，则将核心保留在 C++ 中可能更实用。
另一个考虑因素是您的项目如何处理多线程。在 Rust 和 C++ 之间混合线程和内存所有权非常复杂，并且容易出错。根据应用程序使用线程的方式，这可能会使决策倾向于选择 C++ 或 Rust 作为主要“主机”应用程序。
让 C++ 发挥其优势
虽然 Rust 具有许多优势，特别是在安全性方面，但 C++ 也有其自身的优点，不应草率地否定。重写决定应具有战略性，基于实际需求而不是追求语言纯度，因为通过重写经过充分测试和稳定的 C++ 代码引入新错误的风险超过了 Rust 重写的好处。经过时间考验的 C++ 代码，特别是在信号处理或加密等领域，最好保持原样。这样的代码通常经过高度优化、稳定，并且不易出现与内存相关的问题。俗话说，如果它没有坏，就不要“修复”它。
克服 Rust 的局限性
尽管 Rust 的生态系统正在不断发展，但它仍然相对年轻。依赖小团队或个人维护的软件包具有固有风险。此外，由于 Rust 仍处于语言快速发展的时期，这可能会导致频繁更新，对大型或长期项目构成挑战。在某些情况下，例如非常大的代码库、特定的嵌入式支持要求或开发周期较长的项目，C++ 可能仍然是更实用的选择。在稳定性和寿命很重要的地方使用 C++ 是明智的，在安全性至关重要但可以接受一定程度的开发流动性的地方使用 Rust 是明智的。
摘要
通过将 C++ 的可靠性与 Rust 的安全性相结合，开发人员可以设计持久的系统，同时最大限度地降低常见编程陷阱的风险。如果您有兴趣阅读更多关于此主题的内容，您可以阅读我们关于Rust/C++ 集成的最佳实践指南，该指南由我们与Ferrous Systems联合创始人 Florian Gilcher 合作创建。

关于 KDAB

如果您喜欢这篇文章并想阅读类似的材料，请考虑通过我们的 RSS 源订阅。
订阅KDAB TV 提供类似的信息性短视频内容。 
KDAB 提供市场领先的软件咨询和开发服务以及 Qt、C++ 和 3D/OpenGL 方面的培训。 联系我们。

 
文章更智能的 Rust 之道首先出现在KDAB上。]]></description>
      <guid>https://www.kdab.com/the-smarter-way-to-rust/?utm_source=atom_feed</guid>
      <pubDate>Thu, 27 Jun 2024 08:00:04 GMT</pubDate>
    </item>
    <item>
      <title>剪纸插件 1.3.0</title>
      <link>https://carlschwan.eu/2024/06/26/kirigami-addons-1.3.0/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://carlschwan.eu/2024/06/26/kirigami-addons-1.3.0/?utm_source=atom_feed</guid>
      <pubDate>Wed, 26 Jun 2024 11:20:35 GMT</pubDate>
    </item>
    <item>
      <title>Krita 5.2.3 发布！</title>
      <link>https://krita.org/en/posts/2024/krita-5-2-3-released/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://krita.org/en/posts/2024/krita-5-2-3-released/?utm_source=atom_feed</guid>
      <pubDate>Wed, 26 Jun 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>Hash-o-Matic 1.0.1</title>
      <link>https://carlschwan.eu/2024/06/25/hash-o-matic-1.0.1/?utm_source=atom_feed</link>
      <description><![CDATA[Hash-o-Matic 1.0.1 已发布！Hash-o-Matic 是一款用于比较和生成文件校验和以验证其真实性的工具。它还通过使用 PGP 签名来验证文件。
Hash-o-Matic 的这个新版本提供了更新的翻译和一些小的视觉变化。在后台，应用程序被移植到新的 QML
类型注册，我们现在支持在 Haiku 上构建 Hash-o-Matic，并且我们现在
需要 KDE Frameworks 的发布版本，而不是预发布版本。
Packager Section
您可以在
download.kde.org
找到该软件包，并且它已使用我的GPG 密钥签名。]]></description>
      <guid>https://carlschwan.eu/2024/06/25/hash-o-matic-1.0.1/?utm_source=atom_feed</guid>
      <pubDate>Tue, 25 Jun 2024 10:10:35 GMT</pubDate>
    </item>
    </channel>
</rss>