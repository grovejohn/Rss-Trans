<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/uk/</link>
    <description></description>
    <lastBuildDate>Fri, 16 Aug 2024 06:40:54 GMT</lastBuildDate>
    <item>
      <title>本地化旋转框前缀/后缀</title>
      <link>https://www.volkerkrause.eu/2024/08/16/kf6-localized-spin-box-prefix-suffix.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://www.volkerkrause.eu/2024/08/16/kf6-localized-spin-box-prefix-suffix.html?utm_source=atom_feed</guid>
      <pubDate>Fri, 16 Aug 2024 05:45:00 GMT</pubDate>
    </item>
    <item>
      <title>使用 Shiboken 为 C++ 代码生成 Python 绑定</title>
      <link>https://alcarazzam.dev/posts/generate-python-bindings-shiboken/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://alcarazzam.dev/posts/generate-python-bindings-shiboken/?utm_source=atom_feed</guid>
      <pubDate>Thu, 15 Aug 2024 16:00:00 GMT</pubDate>
    </item>
    <item>
      <title>掌握跨平台桌面应用程序</title>
      <link>https://www.kdab.com/mastering-cross-platform-desktop-apps/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://www.kdab.com/mastering-cross-platform-desktop-apps/?utm_source=atom_feed</guid>
      <pubDate>Thu, 15 Aug 2024 07:00:13 GMT</pubDate>
    </item>
    <item>
      <title>Plasma Dialer 24.08 现已发布</title>
      <link>https://plasma-mobile.org/2024/08/14/plasma-dialer-24.08/?utm_source=atom_feed</link>
      <description><![CDATA[经过漫长的等待，Plasma Dialer 24.08 终于发布了。此版本基于 Qt6，包含 17 个月的错误修复以及其他地方的小改进。










Packager部分
您可以在
download.kde.org
找到该软件包，并且它已使用我的Carl 的 GPG 密钥进行签名。]]></description>
      <guid>https://plasma-mobile.org/2024/08/14/plasma-dialer-24.08/?utm_source=atom_feed</guid>
      <pubDate>Wed, 14 Aug 2024 18:00:00 GMT</pubDate>
    </item>
    <item>
      <title>坏信息驱逐好信息或者我们对维基百科的信任程度有多高？</title>
      <link>https://labplot.kde.org/2024/08/13/bad-information-drives-out-good-or-how-much-can-we-trust-wikipedia/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://labplot.kde.org/2024/08/13/bad-information-drives-out-good-or-how-much-can-we-trust-wikipedia/?utm_source=atom_feed</guid>
      <pubDate>Tue, 13 Aug 2024 08:29:11 GMT</pubDate>
    </item>
    <item>
      <title>KDE、Kubuntu、Debian Qt6 更新以及 Kubuntu Noble .1 更新。</title>
      <link>https://www.scarlettgatelymoore.dev/kde-kubuntu-debian-qt6-updates-plus-kubuntu-noble-1-updates/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://www.scarlettgatelymoore.dev/kde-kubuntu-debian-qt6-updates-plus-kubuntu-noble-1-updates/?utm_source=atom_feed</guid>
      <pubDate>Mon, 12 Aug 2024 16:33:37 GMT</pubDate>
    </item>
    <item>
      <title>第 11 周回顾 - 最后冲刺</title>
      <link>https://kenlo.hashnode.dev/week-11-recap-final-stretch?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://kenlo.hashnode.dev/week-11-recap-final-stretch?utm_source=atom_feed</guid>
      <pubDate>Mon, 12 Aug 2024 13:53:53 GMT</pubDate>
    </item>
    <item>
      <title>GSoC 的最后一个月</title>
      <link>https://alcarazzam.dev/posts/the-last-month-in-gsoc/?utm_source=atom_feed</link>
      <description><![CDATA[我意识到距离我上次更新 GSoC 项目已经过去了将近一个月，所以是时候发布一个新的了。
我一直在将 Python 绑定上传到其相应的存储库并处理评论。非常感谢 Nico、Christophe、Volker、Ben 和 Carl（我的导师）的评论！CMake 部分已经改进了很多，几乎可以合并了。CI 支持应该适用于 FreeBSD 和 Linux。如果人们感兴趣，我们可以添加对 Windows 的支持。
我可能会在下周写一篇关于如何将 Python 绑定添加到库的教程。]]></description>
      <guid>https://alcarazzam.dev/posts/the-last-month-in-gsoc/?utm_source=atom_feed</guid>
      <pubDate>Sun, 11 Aug 2024 11:00:00 GMT</pubDate>
    </item>
    <item>
      <title>先整理？建议阅读 Kent Beck 的书</title>
      <link>https://gruenich.blogspot.com/2024/08/tidy-first-recommendation-to-read-kent.html?utm_source=atom_feed</link>
      <description><![CDATA[大多数时候，程序员不会编写新代码。相反，他们会阅读、尝试理解、扩展和修复现有代码中的错误。虽然 KDE 的某些部分相当新，并且遵循现代标准，但许多部分已有二十多年历史——遵循过时的编码原则，使用过时的解决问题的方法，并由风格各异的几个人添加内容。通常，当我们阅读代码时，我们会立即发现可以改进的地方。Kent Beck 的方法是应用一系列小的整理，从而带来结构变化和整体更好的软件设计。在他的新书 Tidy First?中，他将其理念分为三个部分：整理、如何管理整理以及软件设计理论。在第一部分中，作者介绍了一些通用的整理，例如删除死代码、将声明和初始化一起移动、引入新接口或显式参数。大多数提案并不新颖，但它是一个很好的提醒，请遵循这些提案，并在您正在使用的代码中遇到这些问题时进行修复。阅读第一部分后，我感到有动力立即创建一些整理提交。对于 KDE，可以添加更具体的整理：修复 Qt 和 KF 的弃用警告，用 C++ 替换 C 样式代码，使用现代 C++（范围基数 for 循环、初始化列表），修复编译器警告。第二部分给出了有关如何组织和提交整理的提示。将整理与新功能或行为更改分开。在过于频繁地要求对整理进行审查和过于广泛的审查之间找到平衡。在第三部分中，Kent Beck 提供了一些软件设计的基本思想，特别是未来的选择和代码耦合。这本书值得商业和开源开发人员阅读。两者都面临着类似的问题。开源开发人员不担心成本，而是担心用于为他们喜欢的项目编码的宝贵业余时间。每个项目都会有烂点，并从开发人员的定期整理中获益。对软件设计感兴趣的人会从经典书籍（如结构化设计或重构：改进现有代码的设计）中认出这些想法。尽管如此，Tidy First? 让知识易于获取。大多数章节只有一到三页长，这本书不超过一百页。这是计划中的一系列小书中的第一本。Kent Beck 在他的博客（部分付费）中阐述了他的想法，并与读者讨论了他的观点。一些博客文章被收录到 Kevin 的每周网络评论中。
]]></description>
      <guid>https://gruenich.blogspot.com/2024/08/tidy-first-recommendation-to-read-kent.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 10 Aug 2024 22:01:00 GMT</pubDate>
    </item>
    <item>
      <title>发挥作用</title>
      <link>https://tube.kockatoo.org/w/op6JnEknfotW9QnQFginJp?utm_source=atom_feed</link>
      <description><![CDATA[如何通过 KDE 社区做出贡献并开启您的自由软件职业生涯
与 Aleix Pol 一起，他是 KDE e.V. 总裁，也是 KDE Con​​nect、Plasma、Discover 和 KAlgebra 等产品的核心贡献开发者。]]></description>
      <guid>https://tube.kockatoo.org/w/op6JnEknfotW9QnQFginJp?utm_source=atom_feed</guid>
      <pubDate>Sat, 10 Aug 2024 15:32:27 GMT</pubDate>
    </item>
    </channel>
</rss>