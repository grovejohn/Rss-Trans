<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>星球在哪里|英语</title>
    <link>https://planet.kde.org/de/</link>
    <description></description>
    <lastBuildDate>Tue, 03 Dec 2024 02:48:38 GMT</lastBuildDate>
    <item>
      <title>凯特-1500 个合并请求已接受！</title>
      <link>https://kate-editor.org/post/2024/2024-12-02-kate-1500-accepted-merge-requests/?utm_source=atom_feed</link>
      <description><![CDATA[我今天刚刚查看了我们的 GitLab 页面，心想：太棒了！





感谢大家上一次的巨大贡献年。
希望未来我们能看到更多贡献。
如果您不确定如何贡献，只需查看现有的合并的内容作为参考。
即将发布的 24.12 版本将是一个不错的版本，我们确实对 Kate 进行了大量完善。
我知道世界上并非一切都好，但我仍然希望您能度过美好的一年，并在新的一年里有一个更好的开始！]]></description>
      <guid>https://kate-editor.org/post/2024/2024-12-02-kate-1500-accepted-merge-requests/?utm_source=atom_feed</guid>
      <pubDate>Mon, 02 Dec 2024 19:25:00 GMT</pubDate>
    </item>
    <item>
      <title>Qt Creator 15 发布</title>
      <link>https://www.qt.io/blog/qt-creator-15-released?utm_source=atom_feed</link>
      <description><![CDATA[
  

我们很高兴地宣布 Qt Creator 15 的发布！
Qt Creator 15 现已发布，它为 ARM 上的 Windows 提供原生支持、更新的视觉效果和改进功能，以提高您的工作效率。深入了解并探索增强功能！
]]></description>
      <guid>https://www.qt.io/blog/qt-creator-15-released?utm_source=atom_feed</guid>
      <pubDate>Mon, 02 Dec 2024 14:32:35 GMT</pubDate>
    </item>
    <item>
      <title>Qt for MCUs 2.9 发布</title>
      <link>https://www.qt.io/blog/qt-for-mcus-2.9-released?utm_source=atom_feed</link>
      <description><![CDATA[
  

我们很高兴地宣布推出 Qt for MCUs 2.9，它具有许多关键功能，使 Qt for MCUs 能够支持物联网中的更多用例，消费者和汽车领域。以下是 2.9 版本的几个主要亮点。 
]]></description>
      <guid>https://www.qt.io/blog/qt-for-mcus-2.9-released?utm_source=atom_feed</guid>
      <pubDate>Mon, 02 Dec 2024 10:37:08 GMT</pubDate>
    </item>
    <item>
      <title>我认为捐赠通知有效</title>
      <link>https://pointieststick.com/2024/12/02/i-think-the-donation-notification-works/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://pointieststick.com/2024/12/02/i-think-the-donation-notification-works/?utm_source=atom_feed</guid>
      <pubDate>Mon, 02 Dec 2024 07:09:59 GMT</pubDate>
    </item>
    <item>
      <title>本周 KDE 应用程序中：OptiImage 首次发布，Itinerary 重新设计等等</title>
      <link>https://blogs.kde.org/2024/12/01/this-week-in-kde-apps-optiimage-first-release-itinerary-redesign-and-more/?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://blogs.kde.org/2024/12/01/this-week-in-kde-apps-optiimage-first-release-itinerary-redesign-and-more/?utm_source=atom_feed</guid>
      <pubDate>Sun, 01 Dec 2024 11:20:35 GMT</pubDate>
    </item>
    <item>
      <title>Debian 中的 QML 依赖跟踪</title>
      <link>https://blog.sandroknauss.de/QMLDependencyTrackingInDebian/?utm_source=atom_feed</link>
      <description><![CDATA[Debian 中的跟踪库依赖关系功能可从符号使用解析到库，并将其添加到依赖关系列表中。
多年来一直如此。
如今，KDE 社区创建了越来越多的基于 QML 的应用程序。
不幸的是，QML 是一种解释型语言，这意味着缺少 QML 依赖关系只会在运行时出现问题。
为了解决这个问题，我创建了 dh_qmldeps，它在构建时搜索 QML 依赖关系，如果无法解析 QML 依赖关系，则会失败。
我没有创建自己的 QML 解释器，只是在后台使用 qmlimportscanner 并进一步处理输出以将 QML 模块解析为 Debian 包。
工作流程如下：
包正常编译并拆分为二进制包。
然后 dh_qmldeps 扫描软件包内容以查找 QML 内容（.qml 文件，或 QML 模块的 qmldir）。
所有找到的文件都将由 qmlimportscanner 扫描，输出是依赖的 QML 模块列表。
由于 QML 模块具有标准化的文件路径，我们可以询问 Debian 系统，哪些软件包附带此文件路径。
我们最终在变量 ${qml6:Depends 中得到 Debian 软件包列表。
此变量可以附加到扫描软件包的依赖项列表中。
如果需要，维护者还可以降低某些依赖性以推荐或建议。
您可以在salsa上找到源代码，并在https://qt-kde-team.pages.debian.net/dh_qmldeps.html上找到使用文档。
最近几周，我为每个新包启用了dh_qmldeps，从而创建了一个 QML6 模块包。
因此，第一个错误已解决，它应该可用于更多软件包。
通过使用 qmlimportscanner 扫描所有代码，我发现了几个不存在的 QML 模块：

import QtQuick3DPrivate qt6-multimedia - 没有私有 QML 模块 QTBUG-131753。
import QtQuickPrivate qt6-graphs - 没有私有 QML 模块 QTBUG-131754。
import QtQuickTimeline qt6-quicktimeline - 正确的 QML 名称是 QtQuick.Timeline QTBUG-131755。
import QtQuickControls2 qt6-webengine - 看起来像是移植错误，因为 QML6 模块名称是 QtQuick.Controls QTBUG-131756。
import QtGraphicalEffects kquickimageeditor - QML6 的正确名称是qt5compat.graphicaleffects，因为它是一个例子，没有人检查它kquickimageeditor!7。

是的 - 第一个里程碑已经达到。
我们能够简单地处理 QML 模块。
但 QML 应用程序仍有改进空间。
在应用程序中，QML 文件位于可执行文件中。
此外，应用程序创建内部 QML 模块，这些模块直接在同一个可执行文件中发送。
我仍然在寻找一种分析可执行文件的好方法，以获取内部 QML 模块列表和包含的 QML 文件列表。
欢迎任何想法 :)
作为解决方法，dh_qmldeps 当前扫描应用程序源代码中的所有 QML 文件。]]></description>
      <guid>https://blog.sandroknauss.de/QMLDependencyTrackingInDebian/?utm_source=atom_feed</guid>
      <pubDate>Sun, 01 Dec 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>KDE Gear 24.11.90 可在 Fedora 41（COPR）上使用</title>
      <link>https://blog.marcdeop.com/2024/11/30/kde-gear-24-11-90-available-on-fedora-41-copr/?utm_source=atom_feed</link>
      <description><![CDATA[Fedora KDE SIG 很高兴地宣布 KDE Gear 24.12 RC (24.11.90) 已在 Fedora 41 上通过我们的 @kdesig/kde-beta COPR 存储库 提供 尽情享用吧！]]></description>
      <guid>https://blog.marcdeop.com/2024/11/30/kde-gear-24-11-90-available-on-fedora-41-copr/?utm_source=atom_feed</guid>
      <pubDate>Sat, 30 Nov 2024 21:31:20 GMT</pubDate>
    </item>
    <item>
      <title>剪纸插件 1.6.0</title>
      <link>https://carlschwan.eu/2024/11/30/kirigami-addons-1.6.0/?utm_source=atom_feed</link>
      <description><![CDATA[Kirigami Addons 是一组用于 Kirigami 应用程序的附加组件。此版本主要对 FormCard 模块进行了改进。
AboutPage
Kirigami Addons 提供的关于页面得到了许多改进。Joshua 为所有按钮添加了图标。
我处理了组件部分，现在其中包含有关默认组件以及底层平台的更多信息，并且现在有一个按钮可以将所有这些信息复制到剪贴板。这在编写错误报告时非常有用。还修复了一些小错误，例如，许可证对话框的大小正确。





RadioSelector
RadioSelector 是一个新组件，它是一个简单组件，允许在水平布局中在两个或多个选项之间选择一个选项。这不是一个新组件，因为它已经在 Itinerary 和 Marknote 中使用了很长时间。
还有一个 FormCard 版本，称为 FormRadioSelectorDelegate。





FormPlaceholderMessageDelegate
另一个新组件是 FormPlaceholderMessageDelegate，它基本上是一个
Kirigami.PlaceholderMessage，但不是将其放在 ListView 中，而是将其放在 FormCard 中。




FormPlaceholderMessageDelegate for the health certificate

其他
Volker 修复了日期选择器的 Android 集成。他还添加了对静态构建的支持（iOS 需要，其他平台可能也希望如此）。
Claudio 修复了 DatePicker 的各种问题。
Joshua 使 AlbumMaximizeComponent 中使用的标题可以通过鼠标选择。他还修复了 IndicatorItemDelegate 的分隔符，该分隔符仅在第一个项目之后出现。
我为 FormSwitchDelegate 添加了图标支持，这类似于我们在 FormRadioDelegate 和 FormCheckDelegate 中已有的功能。
Packager Section
Kirigami Addons 1.6.0 已标记，但 tarball 尚不可用。一旦可用，我将更新此帖子。]]></description>
      <guid>https://carlschwan.eu/2024/11/30/kirigami-addons-1.6.0/?utm_source=atom_feed</guid>
      <pubDate>Sat, 30 Nov 2024 14:30:00 GMT</pubDate>
    </item>
    <item>
      <title>OptiImage 1.0.0 已经发布！</title>
      <link>https://carlschwan.eu/2024/11/30/optiimage-1.0.0-is-out/?utm_source=atom_feed</link>
      <description><![CDATA[OptiImage 的第一个版本终于发布了！OptiImage 是一款实用的图像压缩器，支持 PNG、JPEG、WebP 和 SVG 文件类型。它本身不进行压缩，而是使用各种工具（如 oxipng）进行压缩。




OptiImage 压缩屏幕截图





OptiImage 的设置页面

感谢 Mathis Brüchert 对图标所做的工作，以及 Soumyadeep Ghosh
修复了大量错误并促使我完成发布。

打包程序部分
OptiImage 1.0.0 已标记，但 tarball 尚不可用。一旦可用，我将更新
此帖子。
]]></description>
      <guid>https://carlschwan.eu/2024/11/30/optiimage-1.0.0-is-out/?utm_source=atom_feed</guid>
      <pubDate>Sat, 30 Nov 2024 14:30:00 GMT</pubDate>
    </item>
    <item>
      <title>KDE 十月/十一月行程</title>
      <link>https://www.volkerkrause.eu/2024/11/30/kde-itinerary-october-november-2024.html?utm_source=atom_feed</link>
      <description><![CDATA[]]></description>
      <guid>https://www.volkerkrause.eu/2024/11/30/kde-itinerary-october-november-2024.html?utm_source=atom_feed</guid>
      <pubDate>Sat, 30 Nov 2024 08:00:00 GMT</pubDate>
    </item>
    </channel>
</rss>